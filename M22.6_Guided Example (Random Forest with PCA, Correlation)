{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "source": [
    "We've talked about Random Forests. Now it's time to build one.\n",
    "\n",
    "Here we'll use data from Lending Club (2015) to predict the state of a loan given some information about it. You can download the dataset [here](https://www.dropbox.com/s/0so14yudedjmm5m/LoanStats3d.csv?dl=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3058: DtypeWarning: Columns (0,19,55) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    }
   ],
   "source": [
    "# Replace the path with the correct path for your data.\n",
    "y2015 = pd.read_csv(\n",
    "    'https://www.dropbox.com/s/0so14yudedjmm5m/LoanStats3d.csv?dl=1',\n",
    "    skipinitialspace=True,\n",
    "    header=1\n",
    ")\n",
    "\n",
    "# Note the warning about dtypes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>member_id</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>funded_amnt</th>\n",
       "      <th>funded_amnt_inv</th>\n",
       "      <th>term</th>\n",
       "      <th>int_rate</th>\n",
       "      <th>installment</th>\n",
       "      <th>grade</th>\n",
       "      <th>sub_grade</th>\n",
       "      <th>...</th>\n",
       "      <th>num_tl_90g_dpd_24m</th>\n",
       "      <th>num_tl_op_past_12m</th>\n",
       "      <th>pct_tl_nvr_dlq</th>\n",
       "      <th>percent_bc_gt_75</th>\n",
       "      <th>pub_rec_bankruptcies</th>\n",
       "      <th>tax_liens</th>\n",
       "      <th>tot_hi_cred_lim</th>\n",
       "      <th>total_bal_ex_mort</th>\n",
       "      <th>total_bc_limit</th>\n",
       "      <th>total_il_high_credit_limit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>68009401</td>\n",
       "      <td>72868139.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>60 months</td>\n",
       "      <td>14.85%</td>\n",
       "      <td>379.39</td>\n",
       "      <td>C</td>\n",
       "      <td>C5</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>78.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>298100.0</td>\n",
       "      <td>31329.0</td>\n",
       "      <td>281300.0</td>\n",
       "      <td>13400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>68354783</td>\n",
       "      <td>73244544.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>36 months</td>\n",
       "      <td>7.49%</td>\n",
       "      <td>298.58</td>\n",
       "      <td>A</td>\n",
       "      <td>A4</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>66.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>88635.0</td>\n",
       "      <td>55387.0</td>\n",
       "      <td>12500.0</td>\n",
       "      <td>75635.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>68466916</td>\n",
       "      <td>73356753.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>36 months</td>\n",
       "      <td>7.49%</td>\n",
       "      <td>777.55</td>\n",
       "      <td>A</td>\n",
       "      <td>A4</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>373572.0</td>\n",
       "      <td>68056.0</td>\n",
       "      <td>38400.0</td>\n",
       "      <td>82117.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>68466961</td>\n",
       "      <td>73356799.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>36 months</td>\n",
       "      <td>6.49%</td>\n",
       "      <td>858.05</td>\n",
       "      <td>A</td>\n",
       "      <td>A2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>91.7</td>\n",
       "      <td>22.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>304003.0</td>\n",
       "      <td>74920.0</td>\n",
       "      <td>41500.0</td>\n",
       "      <td>42503.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>68495092</td>\n",
       "      <td>73384866.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>36 months</td>\n",
       "      <td>19.89%</td>\n",
       "      <td>320.99</td>\n",
       "      <td>E</td>\n",
       "      <td>E3</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38998.0</td>\n",
       "      <td>18926.0</td>\n",
       "      <td>2750.0</td>\n",
       "      <td>18248.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 111 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         id   member_id  loan_amnt  funded_amnt  funded_amnt_inv        term  \\\n",
       "0  68009401  72868139.0    16000.0      16000.0          16000.0   60 months   \n",
       "1  68354783  73244544.0     9600.0       9600.0           9600.0   36 months   \n",
       "2  68466916  73356753.0    25000.0      25000.0          25000.0   36 months   \n",
       "3  68466961  73356799.0    28000.0      28000.0          28000.0   36 months   \n",
       "4  68495092  73384866.0     8650.0       8650.0           8650.0   36 months   \n",
       "\n",
       "  int_rate  installment grade sub_grade  ... num_tl_90g_dpd_24m  \\\n",
       "0   14.85%       379.39     C        C5  ...                0.0   \n",
       "1    7.49%       298.58     A        A4  ...                0.0   \n",
       "2    7.49%       777.55     A        A4  ...                0.0   \n",
       "3    6.49%       858.05     A        A2  ...                0.0   \n",
       "4   19.89%       320.99     E        E3  ...                0.0   \n",
       "\n",
       "  num_tl_op_past_12m pct_tl_nvr_dlq  percent_bc_gt_75 pub_rec_bankruptcies  \\\n",
       "0                2.0           78.9               0.0                  0.0   \n",
       "1                2.0          100.0              66.7                  0.0   \n",
       "2                0.0          100.0              20.0                  0.0   \n",
       "3                0.0           91.7              22.2                  0.0   \n",
       "4               12.0          100.0              50.0                  1.0   \n",
       "\n",
       "  tax_liens tot_hi_cred_lim total_bal_ex_mort total_bc_limit  \\\n",
       "0       2.0        298100.0           31329.0       281300.0   \n",
       "1       0.0         88635.0           55387.0        12500.0   \n",
       "2       0.0        373572.0           68056.0        38400.0   \n",
       "3       0.0        304003.0           74920.0        41500.0   \n",
       "4       0.0         38998.0           18926.0         2750.0   \n",
       "\n",
       "  total_il_high_credit_limit  \n",
       "0                    13400.0  \n",
       "1                    75635.0  \n",
       "2                    82117.0  \n",
       "3                    42503.0  \n",
       "4                    18248.0  \n",
       "\n",
       "[5 rows x 111 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y2015.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "source": [
    "## The Blind Approach\n",
    "\n",
    "Now, as we've seen before, creating a model is the easy part. Let's try just using everything we've got and throwing it without much thought into a Random Forest. SKLearn requires the independent variables to be be numeric, and all we want is dummy variables so let's use `get_dummies` from Pandas to generate a dummy variable for every categorical column and see what happens off of this kind of naive approach."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "outputs": [],
   "source": [
    "from sklearn import ensemble\n",
    "from sklearn.model_selection import cross_val_score\n",
    "\n",
    "rfc = ensemble.RandomForestClassifier()\n",
    "X = y2015.drop('loan_status', 1)\n",
    "Y = y2015['loan_status']\n",
    "X = pd.get_dummies(X)\n",
    "\n",
    "cross_val_score(rfc, X, Y, cv=5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "source": [
    "Did your kernel die? My kernel died.\n",
    "\n",
    "Guess it isn't always going to be that easy...\n",
    "\n",
    "Can you think of what went wrong?\n",
    "\n",
    "(You're going to have to reset your kernel and reload the column, BUT DON'T RUN THE MODEL AGAIN OR YOU'LL CRASH THE KERNEL AGAIN!)\n",
    "\n",
    "## Data Cleaning\n",
    "\n",
    "Well, `get_dummies` can be a very memory intensive thing, particularly if data are typed poorly. We got a warning about that earlier. Mixed data types get converted to objects, and that could create huge problems. Our dataset is about 400,000 rows. If there's a bad type there its going to see 400,000 distinct values and try to create dummies for all of them. That's bad. Lets look at all our categorical variables and see how many distinct counts there are..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "id\n",
      "421097\n",
      "term\n",
      "2\n",
      "int_rate\n",
      "110\n",
      "grade\n",
      "7\n",
      "sub_grade\n",
      "35\n",
      "emp_title\n",
      "120812\n",
      "emp_length\n",
      "11\n",
      "home_ownership\n",
      "4\n",
      "verification_status\n",
      "3\n",
      "issue_d\n",
      "12\n",
      "loan_status\n",
      "7\n",
      "pymnt_plan\n",
      "1\n",
      "url\n",
      "421095\n",
      "desc\n",
      "34\n",
      "purpose\n",
      "14\n",
      "title\n",
      "27\n",
      "zip_code\n",
      "914\n",
      "addr_state\n",
      "49\n",
      "earliest_cr_line\n",
      "668\n",
      "revol_util\n",
      "1211\n",
      "initial_list_status\n",
      "2\n",
      "last_pymnt_d\n",
      "25\n",
      "next_pymnt_d\n",
      "4\n",
      "last_credit_pull_d\n",
      "26\n",
      "application_type\n",
      "2\n",
      "verification_status_joint\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "categorical = y2015.select_dtypes(include=['object'])\n",
    "for i in categorical:\n",
    "    column = categorical[i]\n",
    "    print(i)\n",
    "    print(column.nunique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "source": [
    "Well that right there is what's called a problem. Some of these have over a hundred thousand distinct types. Lets drop the ones with over 30 unique values, converting to numeric where it makes sense. In doing this there's a lot of code that gets written to just see if the numeric conversion makes sense. It's a manual process that we'll abstract away and just include the conversion.\n",
    "\n",
    "You could extract numeric features from the dates, but here we'll just drop them. There's a lot of data, it shouldn't be a huge problem."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "outputs": [],
   "source": [
    "# Convert ID and Interest Rate to numeric.\n",
    "y2015['id'] = pd.to_numeric(y2015['id'], errors='coerce')\n",
    "y2015['int_rate'] = pd.to_numeric(y2015['int_rate'].str.strip('%'), errors='coerce')\n",
    "\n",
    "# Drop other columns with many unique variables\n",
    "y2015.drop(['url', 'emp_title', 'zip_code', 'earliest_cr_line', 'revol_util',\n",
    "            'sub_grade', 'addr_state', 'desc'], 1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Wonder what was causing the dtype error on the id column, which _should_ have all been integers? Let's look at the end of the file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>member_id</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>funded_amnt</th>\n",
       "      <th>funded_amnt_inv</th>\n",
       "      <th>term</th>\n",
       "      <th>int_rate</th>\n",
       "      <th>installment</th>\n",
       "      <th>grade</th>\n",
       "      <th>emp_length</th>\n",
       "      <th>...</th>\n",
       "      <th>num_tl_90g_dpd_24m</th>\n",
       "      <th>num_tl_op_past_12m</th>\n",
       "      <th>pct_tl_nvr_dlq</th>\n",
       "      <th>percent_bc_gt_75</th>\n",
       "      <th>pub_rec_bankruptcies</th>\n",
       "      <th>tax_liens</th>\n",
       "      <th>tot_hi_cred_lim</th>\n",
       "      <th>total_bal_ex_mort</th>\n",
       "      <th>total_bc_limit</th>\n",
       "      <th>total_il_high_credit_limit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>421092</th>\n",
       "      <td>36271333.0</td>\n",
       "      <td>38982739.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>60 months</td>\n",
       "      <td>15.99</td>\n",
       "      <td>316.07</td>\n",
       "      <td>D</td>\n",
       "      <td>5 years</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>51239.0</td>\n",
       "      <td>34178.0</td>\n",
       "      <td>10600.0</td>\n",
       "      <td>33239.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421093</th>\n",
       "      <td>36490806.0</td>\n",
       "      <td>39222577.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>60 months</td>\n",
       "      <td>19.99</td>\n",
       "      <td>317.86</td>\n",
       "      <td>E</td>\n",
       "      <td>1 year</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>66.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>96919.0</td>\n",
       "      <td>58418.0</td>\n",
       "      <td>9700.0</td>\n",
       "      <td>69919.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421094</th>\n",
       "      <td>36271262.0</td>\n",
       "      <td>38982659.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>36 months</td>\n",
       "      <td>11.99</td>\n",
       "      <td>664.20</td>\n",
       "      <td>B</td>\n",
       "      <td>10+ years</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>43740.0</td>\n",
       "      <td>33307.0</td>\n",
       "      <td>41700.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421095</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421096</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 103 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id   member_id  loan_amnt  funded_amnt  funded_amnt_inv  \\\n",
       "421092  36271333.0  38982739.0    13000.0      13000.0          13000.0   \n",
       "421093  36490806.0  39222577.0    12000.0      12000.0          12000.0   \n",
       "421094  36271262.0  38982659.0    20000.0      20000.0          20000.0   \n",
       "421095         NaN         NaN        NaN          NaN              NaN   \n",
       "421096         NaN         NaN        NaN          NaN              NaN   \n",
       "\n",
       "              term  int_rate  installment grade emp_length  ...  \\\n",
       "421092   60 months     15.99       316.07     D    5 years  ...   \n",
       "421093   60 months     19.99       317.86     E     1 year  ...   \n",
       "421094   36 months     11.99       664.20     B  10+ years  ...   \n",
       "421095         NaN       NaN          NaN   NaN        NaN  ...   \n",
       "421096         NaN       NaN          NaN   NaN        NaN  ...   \n",
       "\n",
       "       num_tl_90g_dpd_24m  num_tl_op_past_12m pct_tl_nvr_dlq percent_bc_gt_75  \\\n",
       "421092                0.0                 3.0          100.0             50.0   \n",
       "421093                1.0                 2.0           95.0             66.7   \n",
       "421094                0.0                 1.0          100.0             50.0   \n",
       "421095                NaN                 NaN            NaN              NaN   \n",
       "421096                NaN                 NaN            NaN              NaN   \n",
       "\n",
       "       pub_rec_bankruptcies tax_liens tot_hi_cred_lim total_bal_ex_mort  \\\n",
       "421092                  1.0       0.0         51239.0           34178.0   \n",
       "421093                  0.0       0.0         96919.0           58418.0   \n",
       "421094                  0.0       1.0         43740.0           33307.0   \n",
       "421095                  NaN       NaN             NaN               NaN   \n",
       "421096                  NaN       NaN             NaN               NaN   \n",
       "\n",
       "        total_bc_limit  total_il_high_credit_limit  \n",
       "421092         10600.0                     33239.0  \n",
       "421093          9700.0                     69919.0  \n",
       "421094         41700.0                         0.0  \n",
       "421095             NaN                         NaN  \n",
       "421096             NaN                         NaN  \n",
       "\n",
       "[5 rows x 103 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y2015.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Remove two summary rows at the end that don't actually contain data.\n",
    "y2015 = y2015[:-2]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "source": [
    "Now this should be better. Let's try again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>member_id</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>funded_amnt</th>\n",
       "      <th>funded_amnt_inv</th>\n",
       "      <th>int_rate</th>\n",
       "      <th>installment</th>\n",
       "      <th>annual_inc</th>\n",
       "      <th>dti</th>\n",
       "      <th>delinq_2yrs</th>\n",
       "      <th>...</th>\n",
       "      <th>last_credit_pull_d_Nov-2016</th>\n",
       "      <th>last_credit_pull_d_Oct-2015</th>\n",
       "      <th>last_credit_pull_d_Oct-2016</th>\n",
       "      <th>last_credit_pull_d_Sep-2015</th>\n",
       "      <th>last_credit_pull_d_Sep-2016</th>\n",
       "      <th>application_type_INDIVIDUAL</th>\n",
       "      <th>application_type_JOINT</th>\n",
       "      <th>verification_status_joint_Not Verified</th>\n",
       "      <th>verification_status_joint_Source Verified</th>\n",
       "      <th>verification_status_joint_Verified</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>68009401.0</td>\n",
       "      <td>72868139.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>14.85</td>\n",
       "      <td>379.39</td>\n",
       "      <td>48000.0</td>\n",
       "      <td>33.18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>68354783.0</td>\n",
       "      <td>73244544.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>7.49</td>\n",
       "      <td>298.58</td>\n",
       "      <td>60000.0</td>\n",
       "      <td>22.44</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>68466916.0</td>\n",
       "      <td>73356753.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>7.49</td>\n",
       "      <td>777.55</td>\n",
       "      <td>109000.0</td>\n",
       "      <td>26.02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>68466961.0</td>\n",
       "      <td>73356799.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>6.49</td>\n",
       "      <td>858.05</td>\n",
       "      <td>92000.0</td>\n",
       "      <td>21.60</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>68495092.0</td>\n",
       "      <td>73384866.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>19.89</td>\n",
       "      <td>320.99</td>\n",
       "      <td>55000.0</td>\n",
       "      <td>25.49</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>68506798.0</td>\n",
       "      <td>73396623.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>8.49</td>\n",
       "      <td>471.77</td>\n",
       "      <td>64000.0</td>\n",
       "      <td>18.28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>68566886.0</td>\n",
       "      <td>73456723.0</td>\n",
       "      <td>29900.0</td>\n",
       "      <td>29900.0</td>\n",
       "      <td>29900.0</td>\n",
       "      <td>12.88</td>\n",
       "      <td>678.49</td>\n",
       "      <td>65000.0</td>\n",
       "      <td>21.77</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>68577849.0</td>\n",
       "      <td>73467703.0</td>\n",
       "      <td>18000.0</td>\n",
       "      <td>18000.0</td>\n",
       "      <td>18000.0</td>\n",
       "      <td>11.99</td>\n",
       "      <td>400.31</td>\n",
       "      <td>112000.0</td>\n",
       "      <td>8.68</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>66310712.0</td>\n",
       "      <td>71035433.0</td>\n",
       "      <td>35000.0</td>\n",
       "      <td>35000.0</td>\n",
       "      <td>35000.0</td>\n",
       "      <td>14.85</td>\n",
       "      <td>829.90</td>\n",
       "      <td>110000.0</td>\n",
       "      <td>17.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>68476807.0</td>\n",
       "      <td>73366655.0</td>\n",
       "      <td>10400.0</td>\n",
       "      <td>10400.0</td>\n",
       "      <td>10400.0</td>\n",
       "      <td>22.45</td>\n",
       "      <td>289.91</td>\n",
       "      <td>104433.0</td>\n",
       "      <td>25.37</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>68341763.0</td>\n",
       "      <td>72928789.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>10.78</td>\n",
       "      <td>432.66</td>\n",
       "      <td>63000.0</td>\n",
       "      <td>10.78</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>68356421.0</td>\n",
       "      <td>73246236.0</td>\n",
       "      <td>22400.0</td>\n",
       "      <td>22400.0</td>\n",
       "      <td>22400.0</td>\n",
       "      <td>12.88</td>\n",
       "      <td>508.30</td>\n",
       "      <td>95000.0</td>\n",
       "      <td>22.98</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>68426545.0</td>\n",
       "      <td>73316365.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>12.88</td>\n",
       "      <td>363.07</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>26.40</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>68407277.0</td>\n",
       "      <td>73297111.0</td>\n",
       "      <td>3600.0</td>\n",
       "      <td>3600.0</td>\n",
       "      <td>3600.0</td>\n",
       "      <td>13.99</td>\n",
       "      <td>123.03</td>\n",
       "      <td>55000.0</td>\n",
       "      <td>5.91</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>68355089.0</td>\n",
       "      <td>73244858.0</td>\n",
       "      <td>24700.0</td>\n",
       "      <td>24700.0</td>\n",
       "      <td>24700.0</td>\n",
       "      <td>11.99</td>\n",
       "      <td>820.28</td>\n",
       "      <td>65000.0</td>\n",
       "      <td>16.06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>68466926.0</td>\n",
       "      <td>73356763.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>6.49</td>\n",
       "      <td>306.45</td>\n",
       "      <td>85000.0</td>\n",
       "      <td>13.07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>68338832.0</td>\n",
       "      <td>73542831.0</td>\n",
       "      <td>1400.0</td>\n",
       "      <td>1400.0</td>\n",
       "      <td>1400.0</td>\n",
       "      <td>12.88</td>\n",
       "      <td>47.10</td>\n",
       "      <td>64000.0</td>\n",
       "      <td>34.95</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>68426831.0</td>\n",
       "      <td>73316657.0</td>\n",
       "      <td>11950.0</td>\n",
       "      <td>11950.0</td>\n",
       "      <td>11950.0</td>\n",
       "      <td>13.44</td>\n",
       "      <td>405.18</td>\n",
       "      <td>34000.0</td>\n",
       "      <td>10.20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>66624733.0</td>\n",
       "      <td>71350547.0</td>\n",
       "      <td>18000.0</td>\n",
       "      <td>18000.0</td>\n",
       "      <td>18000.0</td>\n",
       "      <td>19.48</td>\n",
       "      <td>471.70</td>\n",
       "      <td>150000.0</td>\n",
       "      <td>9.39</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>68616873.0</td>\n",
       "      <td>73519699.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>11.48</td>\n",
       "      <td>263.74</td>\n",
       "      <td>42000.0</td>\n",
       "      <td>34.80</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>67275481.0</td>\n",
       "      <td>72077199.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>8.49</td>\n",
       "      <td>631.26</td>\n",
       "      <td>85000.0</td>\n",
       "      <td>17.61</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>68476668.0</td>\n",
       "      <td>73366513.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>9.17</td>\n",
       "      <td>637.58</td>\n",
       "      <td>180000.0</td>\n",
       "      <td>14.67</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>68476702.0</td>\n",
       "      <td>73366548.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>13.44</td>\n",
       "      <td>949.38</td>\n",
       "      <td>125000.0</td>\n",
       "      <td>7.49</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>68436666.0</td>\n",
       "      <td>73326493.0</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>13.44</td>\n",
       "      <td>169.54</td>\n",
       "      <td>79000.0</td>\n",
       "      <td>12.70</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>68596180.0</td>\n",
       "      <td>73485987.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>5.32</td>\n",
       "      <td>602.30</td>\n",
       "      <td>65000.0</td>\n",
       "      <td>18.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>67849662.0</td>\n",
       "      <td>72708407.0</td>\n",
       "      <td>4225.0</td>\n",
       "      <td>4225.0</td>\n",
       "      <td>4225.0</td>\n",
       "      <td>14.85</td>\n",
       "      <td>146.16</td>\n",
       "      <td>35000.0</td>\n",
       "      <td>15.22</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>68526883.0</td>\n",
       "      <td>73416719.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>5.32</td>\n",
       "      <td>451.73</td>\n",
       "      <td>44000.0</td>\n",
       "      <td>15.34</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>68607141.0</td>\n",
       "      <td>73509983.0</td>\n",
       "      <td>17600.0</td>\n",
       "      <td>17600.0</td>\n",
       "      <td>17600.0</td>\n",
       "      <td>5.32</td>\n",
       "      <td>530.03</td>\n",
       "      <td>88000.0</td>\n",
       "      <td>26.59</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>68476715.0</td>\n",
       "      <td>73366561.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>7.49</td>\n",
       "      <td>186.61</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>13.28</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>67715283.0</td>\n",
       "      <td>72569997.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>12.88</td>\n",
       "      <td>538.18</td>\n",
       "      <td>65000.0</td>\n",
       "      <td>18.96</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421065</th>\n",
       "      <td>36631385.0</td>\n",
       "      <td>39374138.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>8.19</td>\n",
       "      <td>408.52</td>\n",
       "      <td>85000.0</td>\n",
       "      <td>8.05</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421066</th>\n",
       "      <td>36231083.0</td>\n",
       "      <td>38942474.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>11.99</td>\n",
       "      <td>498.15</td>\n",
       "      <td>70000.0</td>\n",
       "      <td>8.47</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421067</th>\n",
       "      <td>36691397.0</td>\n",
       "      <td>39434133.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>6.99</td>\n",
       "      <td>617.46</td>\n",
       "      <td>72000.0</td>\n",
       "      <td>27.24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421068</th>\n",
       "      <td>36743377.0</td>\n",
       "      <td>39486112.0</td>\n",
       "      <td>4200.0</td>\n",
       "      <td>4200.0</td>\n",
       "      <td>4200.0</td>\n",
       "      <td>15.99</td>\n",
       "      <td>147.64</td>\n",
       "      <td>48000.0</td>\n",
       "      <td>36.93</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421069</th>\n",
       "      <td>36331554.0</td>\n",
       "      <td>39042967.0</td>\n",
       "      <td>26950.0</td>\n",
       "      <td>26950.0</td>\n",
       "      <td>26950.0</td>\n",
       "      <td>8.19</td>\n",
       "      <td>846.88</td>\n",
       "      <td>54000.0</td>\n",
       "      <td>18.11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421070</th>\n",
       "      <td>36460697.0</td>\n",
       "      <td>39182359.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>15.59</td>\n",
       "      <td>554.32</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>31.95</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421071</th>\n",
       "      <td>35773415.0</td>\n",
       "      <td>38468842.0</td>\n",
       "      <td>18700.0</td>\n",
       "      <td>18700.0</td>\n",
       "      <td>18700.0</td>\n",
       "      <td>17.86</td>\n",
       "      <td>473.44</td>\n",
       "      <td>52000.0</td>\n",
       "      <td>11.28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421072</th>\n",
       "      <td>36250801.0</td>\n",
       "      <td>38962184.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>17.86</td>\n",
       "      <td>216.50</td>\n",
       "      <td>90000.0</td>\n",
       "      <td>2.84</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421073</th>\n",
       "      <td>36371802.0</td>\n",
       "      <td>39103231.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>11.44</td>\n",
       "      <td>329.44</td>\n",
       "      <td>57000.0</td>\n",
       "      <td>15.77</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421074</th>\n",
       "      <td>36440728.0</td>\n",
       "      <td>39152101.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>15.99</td>\n",
       "      <td>607.82</td>\n",
       "      <td>103000.0</td>\n",
       "      <td>5.27</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421075</th>\n",
       "      <td>36361815.0</td>\n",
       "      <td>39093260.0</td>\n",
       "      <td>26500.0</td>\n",
       "      <td>26500.0</td>\n",
       "      <td>26500.0</td>\n",
       "      <td>8.67</td>\n",
       "      <td>545.87</td>\n",
       "      <td>92000.0</td>\n",
       "      <td>29.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421076</th>\n",
       "      <td>35591131.0</td>\n",
       "      <td>38288343.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>15.59</td>\n",
       "      <td>602.52</td>\n",
       "      <td>55000.0</td>\n",
       "      <td>5.52</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421077</th>\n",
       "      <td>36201871.0</td>\n",
       "      <td>38913321.0</td>\n",
       "      <td>21000.0</td>\n",
       "      <td>21000.0</td>\n",
       "      <td>21000.0</td>\n",
       "      <td>6.03</td>\n",
       "      <td>639.15</td>\n",
       "      <td>65000.0</td>\n",
       "      <td>17.09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421078</th>\n",
       "      <td>36381756.0</td>\n",
       "      <td>39013193.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>8000.0</td>\n",
       "      <td>8.19</td>\n",
       "      <td>251.40</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>17.62</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421079</th>\n",
       "      <td>36231724.0</td>\n",
       "      <td>38943173.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>9.49</td>\n",
       "      <td>384.34</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>25.65</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421080</th>\n",
       "      <td>36301729.0</td>\n",
       "      <td>39023153.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>6.49</td>\n",
       "      <td>306.45</td>\n",
       "      <td>75000.0</td>\n",
       "      <td>33.66</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421081</th>\n",
       "      <td>36250208.0</td>\n",
       "      <td>38961532.0</td>\n",
       "      <td>13150.0</td>\n",
       "      <td>13150.0</td>\n",
       "      <td>13150.0</td>\n",
       "      <td>14.99</td>\n",
       "      <td>312.77</td>\n",
       "      <td>30000.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421082</th>\n",
       "      <td>36241316.0</td>\n",
       "      <td>38952731.0</td>\n",
       "      <td>6225.0</td>\n",
       "      <td>6225.0</td>\n",
       "      <td>6225.0</td>\n",
       "      <td>16.49</td>\n",
       "      <td>220.37</td>\n",
       "      <td>27000.0</td>\n",
       "      <td>18.58</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421083</th>\n",
       "      <td>36231718.0</td>\n",
       "      <td>38943165.0</td>\n",
       "      <td>10775.0</td>\n",
       "      <td>10775.0</td>\n",
       "      <td>10775.0</td>\n",
       "      <td>6.03</td>\n",
       "      <td>327.95</td>\n",
       "      <td>54000.0</td>\n",
       "      <td>13.22</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421084</th>\n",
       "      <td>36381704.0</td>\n",
       "      <td>39013139.0</td>\n",
       "      <td>7000.0</td>\n",
       "      <td>7000.0</td>\n",
       "      <td>7000.0</td>\n",
       "      <td>14.31</td>\n",
       "      <td>240.30</td>\n",
       "      <td>57000.0</td>\n",
       "      <td>16.80</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421085</th>\n",
       "      <td>36421485.0</td>\n",
       "      <td>39142898.0</td>\n",
       "      <td>4000.0</td>\n",
       "      <td>4000.0</td>\n",
       "      <td>4000.0</td>\n",
       "      <td>8.67</td>\n",
       "      <td>126.59</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>12.63</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421086</th>\n",
       "      <td>35094480.0</td>\n",
       "      <td>37777829.0</td>\n",
       "      <td>7500.0</td>\n",
       "      <td>7500.0</td>\n",
       "      <td>7500.0</td>\n",
       "      <td>9.49</td>\n",
       "      <td>240.22</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>25.63</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421087</th>\n",
       "      <td>36260758.0</td>\n",
       "      <td>38972123.0</td>\n",
       "      <td>10850.0</td>\n",
       "      <td>10850.0</td>\n",
       "      <td>10850.0</td>\n",
       "      <td>19.24</td>\n",
       "      <td>399.04</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>29.44</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421088</th>\n",
       "      <td>36221446.0</td>\n",
       "      <td>38932858.0</td>\n",
       "      <td>11575.0</td>\n",
       "      <td>11575.0</td>\n",
       "      <td>11575.0</td>\n",
       "      <td>15.59</td>\n",
       "      <td>404.61</td>\n",
       "      <td>25400.0</td>\n",
       "      <td>27.08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421089</th>\n",
       "      <td>36330911.0</td>\n",
       "      <td>39042282.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>11.99</td>\n",
       "      <td>398.52</td>\n",
       "      <td>63000.0</td>\n",
       "      <td>23.69</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421090</th>\n",
       "      <td>36371250.0</td>\n",
       "      <td>39102635.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>11.99</td>\n",
       "      <td>332.10</td>\n",
       "      <td>31000.0</td>\n",
       "      <td>28.69</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421091</th>\n",
       "      <td>36441262.0</td>\n",
       "      <td>39152692.0</td>\n",
       "      <td>24000.0</td>\n",
       "      <td>24000.0</td>\n",
       "      <td>24000.0</td>\n",
       "      <td>11.99</td>\n",
       "      <td>797.03</td>\n",
       "      <td>79000.0</td>\n",
       "      <td>3.90</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421092</th>\n",
       "      <td>36271333.0</td>\n",
       "      <td>38982739.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>15.99</td>\n",
       "      <td>316.07</td>\n",
       "      <td>35000.0</td>\n",
       "      <td>30.90</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421093</th>\n",
       "      <td>36490806.0</td>\n",
       "      <td>39222577.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>19.99</td>\n",
       "      <td>317.86</td>\n",
       "      <td>64400.0</td>\n",
       "      <td>27.19</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>421094</th>\n",
       "      <td>36271262.0</td>\n",
       "      <td>38982659.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>11.99</td>\n",
       "      <td>664.20</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>10.83</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>421095 rows Ã— 237 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id   member_id  loan_amnt  funded_amnt  funded_amnt_inv  \\\n",
       "0       68009401.0  72868139.0    16000.0      16000.0          16000.0   \n",
       "1       68354783.0  73244544.0     9600.0       9600.0           9600.0   \n",
       "2       68466916.0  73356753.0    25000.0      25000.0          25000.0   \n",
       "3       68466961.0  73356799.0    28000.0      28000.0          28000.0   \n",
       "4       68495092.0  73384866.0     8650.0       8650.0           8650.0   \n",
       "5       68506798.0  73396623.0    23000.0      23000.0          23000.0   \n",
       "6       68566886.0  73456723.0    29900.0      29900.0          29900.0   \n",
       "7       68577849.0  73467703.0    18000.0      18000.0          18000.0   \n",
       "8       66310712.0  71035433.0    35000.0      35000.0          35000.0   \n",
       "9       68476807.0  73366655.0    10400.0      10400.0          10400.0   \n",
       "10      68341763.0  72928789.0    20000.0      20000.0          20000.0   \n",
       "11      68356421.0  73246236.0    22400.0      22400.0          22400.0   \n",
       "12      68426545.0  73316365.0    16000.0      16000.0          16000.0   \n",
       "13      68407277.0  73297111.0     3600.0       3600.0           3600.0   \n",
       "14      68355089.0  73244858.0    24700.0      24700.0          24700.0   \n",
       "15      68466926.0  73356763.0    10000.0      10000.0          10000.0   \n",
       "16      68338832.0  73542831.0     1400.0       1400.0           1400.0   \n",
       "17      68426831.0  73316657.0    11950.0      11950.0          11950.0   \n",
       "18      66624733.0  71350547.0    18000.0      18000.0          18000.0   \n",
       "19      68616873.0  73519699.0     8000.0       8000.0           8000.0   \n",
       "20      67275481.0  72077199.0    20000.0      20000.0          20000.0   \n",
       "21      68476668.0  73366513.0    20000.0      20000.0          20000.0   \n",
       "22      68476702.0  73366548.0    28000.0      28000.0          28000.0   \n",
       "23      68436666.0  73326493.0     5000.0       5000.0           5000.0   \n",
       "24      68596180.0  73485987.0    20000.0      20000.0          20000.0   \n",
       "25      67849662.0  72708407.0     4225.0       4225.0           4225.0   \n",
       "26      68526883.0  73416719.0    15000.0      15000.0          15000.0   \n",
       "27      68607141.0  73509983.0    17600.0      17600.0          17600.0   \n",
       "28      68476715.0  73366561.0     6000.0       6000.0           6000.0   \n",
       "29      67715283.0  72569997.0    16000.0      16000.0          16000.0   \n",
       "...            ...         ...        ...          ...              ...   \n",
       "421065  36631385.0  39374138.0    13000.0      13000.0          13000.0   \n",
       "421066  36231083.0  38942474.0    15000.0      15000.0          15000.0   \n",
       "421067  36691397.0  39434133.0    20000.0      20000.0          20000.0   \n",
       "421068  36743377.0  39486112.0     4200.0       4200.0           4200.0   \n",
       "421069  36331554.0  39042967.0    26950.0      26950.0          26950.0   \n",
       "421070  36460697.0  39182359.0    23000.0      23000.0          23000.0   \n",
       "421071  35773415.0  38468842.0    18700.0      18700.0          18700.0   \n",
       "421072  36250801.0  38962184.0     6000.0       6000.0           6000.0   \n",
       "421073  36371802.0  39103231.0    15000.0      15000.0          15000.0   \n",
       "421074  36440728.0  39152101.0    25000.0      25000.0          25000.0   \n",
       "421075  36361815.0  39093260.0    26500.0      26500.0          26500.0   \n",
       "421076  35591131.0  38288343.0    25000.0      25000.0          25000.0   \n",
       "421077  36201871.0  38913321.0    21000.0      21000.0          21000.0   \n",
       "421078  36381756.0  39013193.0     8000.0       8000.0           8000.0   \n",
       "421079  36231724.0  38943173.0    12000.0      12000.0          12000.0   \n",
       "421080  36301729.0  39023153.0    10000.0      10000.0          10000.0   \n",
       "421081  36250208.0  38961532.0    13150.0      13150.0          13150.0   \n",
       "421082  36241316.0  38952731.0     6225.0       6225.0           6225.0   \n",
       "421083  36231718.0  38943165.0    10775.0      10775.0          10775.0   \n",
       "421084  36381704.0  39013139.0     7000.0       7000.0           7000.0   \n",
       "421085  36421485.0  39142898.0     4000.0       4000.0           4000.0   \n",
       "421086  35094480.0  37777829.0     7500.0       7500.0           7500.0   \n",
       "421087  36260758.0  38972123.0    10850.0      10850.0          10850.0   \n",
       "421088  36221446.0  38932858.0    11575.0      11575.0          11575.0   \n",
       "421089  36330911.0  39042282.0    12000.0      12000.0          12000.0   \n",
       "421090  36371250.0  39102635.0    10000.0      10000.0          10000.0   \n",
       "421091  36441262.0  39152692.0    24000.0      24000.0          24000.0   \n",
       "421092  36271333.0  38982739.0    13000.0      13000.0          13000.0   \n",
       "421093  36490806.0  39222577.0    12000.0      12000.0          12000.0   \n",
       "421094  36271262.0  38982659.0    20000.0      20000.0          20000.0   \n",
       "\n",
       "        int_rate  installment  annual_inc    dti  delinq_2yrs  ...  \\\n",
       "0          14.85       379.39     48000.0  33.18          0.0  ...   \n",
       "1           7.49       298.58     60000.0  22.44          0.0  ...   \n",
       "2           7.49       777.55    109000.0  26.02          0.0  ...   \n",
       "3           6.49       858.05     92000.0  21.60          0.0  ...   \n",
       "4          19.89       320.99     55000.0  25.49          0.0  ...   \n",
       "5           8.49       471.77     64000.0  18.28          0.0  ...   \n",
       "6          12.88       678.49     65000.0  21.77          0.0  ...   \n",
       "7          11.99       400.31    112000.0   8.68          0.0  ...   \n",
       "8          14.85       829.90    110000.0  17.06          0.0  ...   \n",
       "9          22.45       289.91    104433.0  25.37          1.0  ...   \n",
       "10         10.78       432.66     63000.0  10.78          0.0  ...   \n",
       "11         12.88       508.30     95000.0  22.98          0.0  ...   \n",
       "12         12.88       363.07     70000.0  26.40          0.0  ...   \n",
       "13         13.99       123.03     55000.0   5.91          0.0  ...   \n",
       "14         11.99       820.28     65000.0  16.06          1.0  ...   \n",
       "15          6.49       306.45     85000.0  13.07          0.0  ...   \n",
       "16         12.88        47.10     64000.0  34.95          0.0  ...   \n",
       "17         13.44       405.18     34000.0  10.20          0.0  ...   \n",
       "18         19.48       471.70    150000.0   9.39          0.0  ...   \n",
       "19         11.48       263.74     42000.0  34.80          0.0  ...   \n",
       "20          8.49       631.26     85000.0  17.61          1.0  ...   \n",
       "21          9.17       637.58    180000.0  14.67          0.0  ...   \n",
       "22         13.44       949.38    125000.0   7.49          0.0  ...   \n",
       "23         13.44       169.54     79000.0  12.70          0.0  ...   \n",
       "24          5.32       602.30     65000.0  18.83          0.0  ...   \n",
       "25         14.85       146.16     35000.0  15.22          2.0  ...   \n",
       "26          5.32       451.73     44000.0  15.34          0.0  ...   \n",
       "27          5.32       530.03     88000.0  26.59          0.0  ...   \n",
       "28          7.49       186.61    100000.0  13.28          1.0  ...   \n",
       "29         12.88       538.18     65000.0  18.96          0.0  ...   \n",
       "...          ...          ...         ...    ...          ...  ...   \n",
       "421065      8.19       408.52     85000.0   8.05          1.0  ...   \n",
       "421066     11.99       498.15     70000.0   8.47          0.0  ...   \n",
       "421067      6.99       617.46     72000.0  27.24          0.0  ...   \n",
       "421068     15.99       147.64     48000.0  36.93          0.0  ...   \n",
       "421069      8.19       846.88     54000.0  18.11          0.0  ...   \n",
       "421070     15.59       554.32     50000.0  31.95          0.0  ...   \n",
       "421071     17.86       473.44     52000.0  11.28          0.0  ...   \n",
       "421072     17.86       216.50     90000.0   2.84          0.0  ...   \n",
       "421073     11.44       329.44     57000.0  15.77          0.0  ...   \n",
       "421074     15.99       607.82    103000.0   5.27          0.0  ...   \n",
       "421075      8.67       545.87     92000.0  29.60          1.0  ...   \n",
       "421076     15.59       602.52     55000.0   5.52          0.0  ...   \n",
       "421077      6.03       639.15     65000.0  17.09          0.0  ...   \n",
       "421078      8.19       251.40     50000.0  17.62          0.0  ...   \n",
       "421079      9.49       384.34     40000.0  25.65          1.0  ...   \n",
       "421080      6.49       306.45     75000.0  33.66          0.0  ...   \n",
       "421081     14.99       312.77     30000.0   1.00          0.0  ...   \n",
       "421082     16.49       220.37     27000.0  18.58          0.0  ...   \n",
       "421083      6.03       327.95     54000.0  13.22          1.0  ...   \n",
       "421084     14.31       240.30     57000.0  16.80          2.0  ...   \n",
       "421085      8.67       126.59     50000.0  12.63          0.0  ...   \n",
       "421086      9.49       240.22     40000.0  25.63          0.0  ...   \n",
       "421087     19.24       399.04     32000.0  29.44          0.0  ...   \n",
       "421088     15.59       404.61     25400.0  27.08          0.0  ...   \n",
       "421089     11.99       398.52     63000.0  23.69          1.0  ...   \n",
       "421090     11.99       332.10     31000.0  28.69          0.0  ...   \n",
       "421091     11.99       797.03     79000.0   3.90          0.0  ...   \n",
       "421092     15.99       316.07     35000.0  30.90          0.0  ...   \n",
       "421093     19.99       317.86     64400.0  27.19          1.0  ...   \n",
       "421094     11.99       664.20    100000.0  10.83          0.0  ...   \n",
       "\n",
       "        last_credit_pull_d_Nov-2016  last_credit_pull_d_Oct-2015  \\\n",
       "0                                 0                            0   \n",
       "1                                 0                            0   \n",
       "2                                 0                            0   \n",
       "3                                 0                            0   \n",
       "4                                 0                            0   \n",
       "5                                 0                            0   \n",
       "6                                 0                            0   \n",
       "7                                 0                            0   \n",
       "8                                 0                            0   \n",
       "9                                 0                            0   \n",
       "10                                0                            0   \n",
       "11                                0                            0   \n",
       "12                                0                            0   \n",
       "13                                0                            0   \n",
       "14                                0                            0   \n",
       "15                                0                            0   \n",
       "16                                0                            0   \n",
       "17                                0                            0   \n",
       "18                                0                            0   \n",
       "19                                0                            0   \n",
       "20                                0                            0   \n",
       "21                                1                            0   \n",
       "22                                0                            0   \n",
       "23                                0                            0   \n",
       "24                                0                            0   \n",
       "25                                0                            0   \n",
       "26                                0                            0   \n",
       "27                                1                            0   \n",
       "28                                0                            0   \n",
       "29                                0                            0   \n",
       "...                             ...                          ...   \n",
       "421065                            0                            0   \n",
       "421066                            0                            0   \n",
       "421067                            0                            0   \n",
       "421068                            0                            0   \n",
       "421069                            0                            0   \n",
       "421070                            0                            0   \n",
       "421071                            0                            0   \n",
       "421072                            0                            0   \n",
       "421073                            0                            0   \n",
       "421074                            0                            0   \n",
       "421075                            0                            0   \n",
       "421076                            0                            0   \n",
       "421077                            0                            0   \n",
       "421078                            0                            0   \n",
       "421079                            0                            0   \n",
       "421080                            0                            0   \n",
       "421081                            0                            0   \n",
       "421082                            0                            0   \n",
       "421083                            0                            0   \n",
       "421084                            0                            0   \n",
       "421085                            0                            0   \n",
       "421086                            0                            0   \n",
       "421087                            0                            0   \n",
       "421088                            1                            0   \n",
       "421089                            0                            0   \n",
       "421090                            0                            0   \n",
       "421091                            0                            0   \n",
       "421092                            0                            0   \n",
       "421093                            0                            0   \n",
       "421094                            0                            0   \n",
       "\n",
       "        last_credit_pull_d_Oct-2016  last_credit_pull_d_Sep-2015  \\\n",
       "0                                 0                            0   \n",
       "1                                 0                            0   \n",
       "2                                 0                            0   \n",
       "3                                 0                            0   \n",
       "4                                 0                            0   \n",
       "5                                 0                            0   \n",
       "6                                 0                            0   \n",
       "7                                 0                            0   \n",
       "8                                 0                            0   \n",
       "9                                 0                            0   \n",
       "10                                0                            0   \n",
       "11                                0                            0   \n",
       "12                                0                            0   \n",
       "13                                0                            0   \n",
       "14                                0                            0   \n",
       "15                                0                            0   \n",
       "16                                0                            0   \n",
       "17                                0                            0   \n",
       "18                                0                            0   \n",
       "19                                0                            0   \n",
       "20                                0                            0   \n",
       "21                                0                            0   \n",
       "22                                0                            0   \n",
       "23                                0                            0   \n",
       "24                                0                            0   \n",
       "25                                0                            0   \n",
       "26                                0                            0   \n",
       "27                                0                            0   \n",
       "28                                0                            0   \n",
       "29                                0                            0   \n",
       "...                             ...                          ...   \n",
       "421065                            0                            0   \n",
       "421066                            0                            0   \n",
       "421067                            0                            0   \n",
       "421068                            0                            0   \n",
       "421069                            0                            0   \n",
       "421070                            0                            0   \n",
       "421071                            0                            0   \n",
       "421072                            0                            0   \n",
       "421073                            0                            0   \n",
       "421074                            0                            0   \n",
       "421075                            0                            0   \n",
       "421076                            0                            0   \n",
       "421077                            0                            0   \n",
       "421078                            0                            0   \n",
       "421079                            1                            0   \n",
       "421080                            0                            0   \n",
       "421081                            0                            0   \n",
       "421082                            0                            0   \n",
       "421083                            0                            0   \n",
       "421084                            0                            0   \n",
       "421085                            1                            0   \n",
       "421086                            0                            0   \n",
       "421087                            1                            0   \n",
       "421088                            0                            0   \n",
       "421089                            0                            0   \n",
       "421090                            0                            0   \n",
       "421091                            0                            0   \n",
       "421092                            0                            0   \n",
       "421093                            1                            0   \n",
       "421094                            0                            0   \n",
       "\n",
       "        last_credit_pull_d_Sep-2016  application_type_INDIVIDUAL  \\\n",
       "0                                 0                            1   \n",
       "1                                 0                            1   \n",
       "2                                 0                            1   \n",
       "3                                 0                            1   \n",
       "4                                 0                            1   \n",
       "5                                 0                            1   \n",
       "6                                 0                            1   \n",
       "7                                 0                            1   \n",
       "8                                 0                            1   \n",
       "9                                 0                            1   \n",
       "10                                0                            0   \n",
       "11                                0                            1   \n",
       "12                                0                            1   \n",
       "13                                0                            1   \n",
       "14                                0                            1   \n",
       "15                                0                            1   \n",
       "16                                0                            1   \n",
       "17                                0                            1   \n",
       "18                                0                            1   \n",
       "19                                0                            1   \n",
       "20                                0                            1   \n",
       "21                                0                            1   \n",
       "22                                0                            1   \n",
       "23                                0                            1   \n",
       "24                                0                            1   \n",
       "25                                0                            1   \n",
       "26                                0                            1   \n",
       "27                                0                            1   \n",
       "28                                0                            1   \n",
       "29                                0                            1   \n",
       "...                             ...                          ...   \n",
       "421065                            0                            1   \n",
       "421066                            0                            1   \n",
       "421067                            0                            1   \n",
       "421068                            0                            1   \n",
       "421069                            0                            1   \n",
       "421070                            0                            1   \n",
       "421071                            0                            1   \n",
       "421072                            0                            1   \n",
       "421073                            0                            1   \n",
       "421074                            0                            1   \n",
       "421075                            0                            1   \n",
       "421076                            0                            1   \n",
       "421077                            0                            1   \n",
       "421078                            0                            1   \n",
       "421079                            0                            1   \n",
       "421080                            0                            1   \n",
       "421081                            0                            1   \n",
       "421082                            0                            1   \n",
       "421083                            0                            1   \n",
       "421084                            0                            1   \n",
       "421085                            0                            1   \n",
       "421086                            0                            1   \n",
       "421087                            0                            1   \n",
       "421088                            0                            1   \n",
       "421089                            0                            1   \n",
       "421090                            0                            1   \n",
       "421091                            0                            1   \n",
       "421092                            0                            1   \n",
       "421093                            0                            1   \n",
       "421094                            0                            1   \n",
       "\n",
       "        application_type_JOINT  verification_status_joint_Not Verified  \\\n",
       "0                            0                                       0   \n",
       "1                            0                                       0   \n",
       "2                            0                                       0   \n",
       "3                            0                                       0   \n",
       "4                            0                                       0   \n",
       "5                            0                                       0   \n",
       "6                            0                                       0   \n",
       "7                            0                                       0   \n",
       "8                            0                                       0   \n",
       "9                            0                                       0   \n",
       "10                           1                                       1   \n",
       "11                           0                                       0   \n",
       "12                           0                                       0   \n",
       "13                           0                                       0   \n",
       "14                           0                                       0   \n",
       "15                           0                                       0   \n",
       "16                           0                                       0   \n",
       "17                           0                                       0   \n",
       "18                           0                                       0   \n",
       "19                           0                                       0   \n",
       "20                           0                                       0   \n",
       "21                           0                                       0   \n",
       "22                           0                                       0   \n",
       "23                           0                                       0   \n",
       "24                           0                                       0   \n",
       "25                           0                                       0   \n",
       "26                           0                                       0   \n",
       "27                           0                                       0   \n",
       "28                           0                                       0   \n",
       "29                           0                                       0   \n",
       "...                        ...                                     ...   \n",
       "421065                       0                                       0   \n",
       "421066                       0                                       0   \n",
       "421067                       0                                       0   \n",
       "421068                       0                                       0   \n",
       "421069                       0                                       0   \n",
       "421070                       0                                       0   \n",
       "421071                       0                                       0   \n",
       "421072                       0                                       0   \n",
       "421073                       0                                       0   \n",
       "421074                       0                                       0   \n",
       "421075                       0                                       0   \n",
       "421076                       0                                       0   \n",
       "421077                       0                                       0   \n",
       "421078                       0                                       0   \n",
       "421079                       0                                       0   \n",
       "421080                       0                                       0   \n",
       "421081                       0                                       0   \n",
       "421082                       0                                       0   \n",
       "421083                       0                                       0   \n",
       "421084                       0                                       0   \n",
       "421085                       0                                       0   \n",
       "421086                       0                                       0   \n",
       "421087                       0                                       0   \n",
       "421088                       0                                       0   \n",
       "421089                       0                                       0   \n",
       "421090                       0                                       0   \n",
       "421091                       0                                       0   \n",
       "421092                       0                                       0   \n",
       "421093                       0                                       0   \n",
       "421094                       0                                       0   \n",
       "\n",
       "        verification_status_joint_Source Verified  \\\n",
       "0                                               0   \n",
       "1                                               0   \n",
       "2                                               0   \n",
       "3                                               0   \n",
       "4                                               0   \n",
       "5                                               0   \n",
       "6                                               0   \n",
       "7                                               0   \n",
       "8                                               0   \n",
       "9                                               0   \n",
       "10                                              0   \n",
       "11                                              0   \n",
       "12                                              0   \n",
       "13                                              0   \n",
       "14                                              0   \n",
       "15                                              0   \n",
       "16                                              0   \n",
       "17                                              0   \n",
       "18                                              0   \n",
       "19                                              0   \n",
       "20                                              0   \n",
       "21                                              0   \n",
       "22                                              0   \n",
       "23                                              0   \n",
       "24                                              0   \n",
       "25                                              0   \n",
       "26                                              0   \n",
       "27                                              0   \n",
       "28                                              0   \n",
       "29                                              0   \n",
       "...                                           ...   \n",
       "421065                                          0   \n",
       "421066                                          0   \n",
       "421067                                          0   \n",
       "421068                                          0   \n",
       "421069                                          0   \n",
       "421070                                          0   \n",
       "421071                                          0   \n",
       "421072                                          0   \n",
       "421073                                          0   \n",
       "421074                                          0   \n",
       "421075                                          0   \n",
       "421076                                          0   \n",
       "421077                                          0   \n",
       "421078                                          0   \n",
       "421079                                          0   \n",
       "421080                                          0   \n",
       "421081                                          0   \n",
       "421082                                          0   \n",
       "421083                                          0   \n",
       "421084                                          0   \n",
       "421085                                          0   \n",
       "421086                                          0   \n",
       "421087                                          0   \n",
       "421088                                          0   \n",
       "421089                                          0   \n",
       "421090                                          0   \n",
       "421091                                          0   \n",
       "421092                                          0   \n",
       "421093                                          0   \n",
       "421094                                          0   \n",
       "\n",
       "        verification_status_joint_Verified  \n",
       "0                                        0  \n",
       "1                                        0  \n",
       "2                                        0  \n",
       "3                                        0  \n",
       "4                                        0  \n",
       "5                                        0  \n",
       "6                                        0  \n",
       "7                                        0  \n",
       "8                                        0  \n",
       "9                                        0  \n",
       "10                                       0  \n",
       "11                                       0  \n",
       "12                                       0  \n",
       "13                                       0  \n",
       "14                                       0  \n",
       "15                                       0  \n",
       "16                                       0  \n",
       "17                                       0  \n",
       "18                                       0  \n",
       "19                                       0  \n",
       "20                                       0  \n",
       "21                                       0  \n",
       "22                                       0  \n",
       "23                                       0  \n",
       "24                                       0  \n",
       "25                                       0  \n",
       "26                                       0  \n",
       "27                                       0  \n",
       "28                                       0  \n",
       "29                                       0  \n",
       "...                                    ...  \n",
       "421065                                   0  \n",
       "421066                                   0  \n",
       "421067                                   0  \n",
       "421068                                   0  \n",
       "421069                                   0  \n",
       "421070                                   0  \n",
       "421071                                   0  \n",
       "421072                                   0  \n",
       "421073                                   0  \n",
       "421074                                   0  \n",
       "421075                                   0  \n",
       "421076                                   0  \n",
       "421077                                   0  \n",
       "421078                                   0  \n",
       "421079                                   0  \n",
       "421080                                   0  \n",
       "421081                                   0  \n",
       "421082                                   0  \n",
       "421083                                   0  \n",
       "421084                                   0  \n",
       "421085                                   0  \n",
       "421086                                   0  \n",
       "421087                                   0  \n",
       "421088                                   0  \n",
       "421089                                   0  \n",
       "421090                                   0  \n",
       "421091                                   0  \n",
       "421092                                   0  \n",
       "421093                                   0  \n",
       "421094                                   0  \n",
       "\n",
       "[421095 rows x 237 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.get_dummies(y2015)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "source": [
    "It finally works! We had to sacrifice sub grade, state address and description, but that's fine. If you want to include them you could run the dummies independently and then append them back to the dataframe.\n",
    "\n",
    "## Second Attempt\n",
    "\n",
    "Now let's try this model again.\n",
    "\n",
    "We're also going to drop NA columns, rather than impute, because our data is rich enough that we can probably get away with it.\n",
    "\n",
    "This model may take a few minutes to run."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([0.98026644, 0.98067013, 0.98114507, 0.98183373, 0.97459036,\n",
       "       0.97644265, 0.93051367, 0.98055048, 0.98016957, 0.9802641 ])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn import ensemble\n",
    "from sklearn.model_selection import cross_val_score\n",
    "\n",
    "rfc = ensemble.RandomForestClassifier()\n",
    "X = y2015.drop('loan_status', 1)\n",
    "Y = y2015['loan_status']\n",
    "X = pd.get_dummies(X)\n",
    "X = X.dropna(axis=1)\n",
    "\n",
    "cross_val_score(rfc, X, Y, cv=10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "source": [
    "The score cross validation reports is the accuracy of the tree. Here we're about 98% accurate.\n",
    "\n",
    "That works pretty well, but there are a few potential problems. Firstly, we didn't really do much in the way of feature selection or model refinement. As such there are a lot of features in there that we don't really need. Some of them are actually quite impressively useless.\n",
    "\n",
    "There's also some variance in the scores. The fact that one gave us only 93% accuracy while others gave higher than 98 is concerning. This variance could be corrected by increasing the number of estimators. That will make it take even longer to run, however, and it is already quite slow."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## DRILL: Third Attempt\n",
    "\n",
    "So here's your task. Get rid of as much data as possible without dropping below an average of 90% accuracy in a 10-fold cross validation.\n",
    "\n",
    "You'll want to do a few things in this process. First, dive into the data that we have and see which features are most important. This can be the raw features or the generated dummies. You may want to use PCA or correlation matrices.\n",
    "\n",
    "Can you do it without using anything related to payment amount or outstanding principal? How do you know?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>member_id</th>\n",
       "      <th>loan_amnt</th>\n",
       "      <th>funded_amnt</th>\n",
       "      <th>funded_amnt_inv</th>\n",
       "      <th>int_rate</th>\n",
       "      <th>installment</th>\n",
       "      <th>annual_inc</th>\n",
       "      <th>dti</th>\n",
       "      <th>delinq_2yrs</th>\n",
       "      <th>...</th>\n",
       "      <th>verification_status_joint_Not Verified</th>\n",
       "      <th>verification_status_joint_Source Verified</th>\n",
       "      <th>verification_status_joint_Verified</th>\n",
       "      <th>loan_status_Charged Off</th>\n",
       "      <th>loan_status_Current</th>\n",
       "      <th>loan_status_Default</th>\n",
       "      <th>loan_status_Fully Paid</th>\n",
       "      <th>loan_status_In Grace Period</th>\n",
       "      <th>loan_status_Late (16-30 days)</th>\n",
       "      <th>loan_status_Late (31-120 days)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>68009401.0</td>\n",
       "      <td>72868139.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>14.85</td>\n",
       "      <td>379.39</td>\n",
       "      <td>48000.0</td>\n",
       "      <td>33.18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>68354783.0</td>\n",
       "      <td>73244544.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>9600.0</td>\n",
       "      <td>7.49</td>\n",
       "      <td>298.58</td>\n",
       "      <td>60000.0</td>\n",
       "      <td>22.44</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>68466916.0</td>\n",
       "      <td>73356753.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>7.49</td>\n",
       "      <td>777.55</td>\n",
       "      <td>109000.0</td>\n",
       "      <td>26.02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>68466961.0</td>\n",
       "      <td>73356799.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>6.49</td>\n",
       "      <td>858.05</td>\n",
       "      <td>92000.0</td>\n",
       "      <td>21.60</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>68495092.0</td>\n",
       "      <td>73384866.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>8650.0</td>\n",
       "      <td>19.89</td>\n",
       "      <td>320.99</td>\n",
       "      <td>55000.0</td>\n",
       "      <td>25.49</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 208 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id   member_id  loan_amnt  funded_amnt  funded_amnt_inv  int_rate  \\\n",
       "0  68009401.0  72868139.0    16000.0      16000.0          16000.0     14.85   \n",
       "1  68354783.0  73244544.0     9600.0       9600.0           9600.0      7.49   \n",
       "2  68466916.0  73356753.0    25000.0      25000.0          25000.0      7.49   \n",
       "3  68466961.0  73356799.0    28000.0      28000.0          28000.0      6.49   \n",
       "4  68495092.0  73384866.0     8650.0       8650.0           8650.0     19.89   \n",
       "\n",
       "   installment  annual_inc    dti  delinq_2yrs  ...  \\\n",
       "0       379.39     48000.0  33.18          0.0  ...   \n",
       "1       298.58     60000.0  22.44          0.0  ...   \n",
       "2       777.55    109000.0  26.02          0.0  ...   \n",
       "3       858.05     92000.0  21.60          0.0  ...   \n",
       "4       320.99     55000.0  25.49          0.0  ...   \n",
       "\n",
       "   verification_status_joint_Not Verified  \\\n",
       "0                                       0   \n",
       "1                                       0   \n",
       "2                                       0   \n",
       "3                                       0   \n",
       "4                                       0   \n",
       "\n",
       "   verification_status_joint_Source Verified  \\\n",
       "0                                          0   \n",
       "1                                          0   \n",
       "2                                          0   \n",
       "3                                          0   \n",
       "4                                          0   \n",
       "\n",
       "   verification_status_joint_Verified  loan_status_Charged Off  \\\n",
       "0                                   0                        0   \n",
       "1                                   0                        0   \n",
       "2                                   0                        0   \n",
       "3                                   0                        0   \n",
       "4                                   0                        0   \n",
       "\n",
       "   loan_status_Current  loan_status_Default  loan_status_Fully Paid  \\\n",
       "0                    1                    0                       0   \n",
       "1                    1                    0                       0   \n",
       "2                    0                    0                       1   \n",
       "3                    1                    0                       0   \n",
       "4                    0                    0                       1   \n",
       "\n",
       "   loan_status_In Grace Period  loan_status_Late (16-30 days)  \\\n",
       "0                            0                              0   \n",
       "1                            0                              0   \n",
       "2                            0                              0   \n",
       "3                            0                              0   \n",
       "4                            0                              0   \n",
       "\n",
       "   loan_status_Late (31-120 days)  \n",
       "0                               0  \n",
       "1                               0  \n",
       "2                               0  \n",
       "3                               0  \n",
       "4                               0  \n",
       "\n",
       "[5 rows x 208 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your code here.\n",
    "y2015_corr = pd.concat([X, Y], axis=1)\n",
    "y2015_corr.head()\n",
    "y2015_corr_d = pd.get_dummies(y2015_corr)\n",
    "y2015_corr_d.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "run_control": {
     "frozen": false,
     "read_only": false
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This is id index list: Index(['id', 'member_id', 'out_prncp', 'out_prncp_inv', 'issue_d_Aug-2015',\n",
      "       'issue_d_Dec-2015', 'issue_d_Nov-2015', 'issue_d_Oct-2015',\n",
      "       'issue_d_Sep-2015', 'initial_list_status_w', 'last_pymnt_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is member_id index list: Index(['id', 'member_id', 'out_prncp', 'out_prncp_inv', 'issue_d_Aug-2015',\n",
      "       'issue_d_Dec-2015', 'issue_d_Nov-2015', 'issue_d_Oct-2015',\n",
      "       'issue_d_Sep-2015', 'initial_list_status_w', 'last_pymnt_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is loan_amnt index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'annual_inc', 'open_acc', 'revol_bal', 'total_acc',\n",
      "       'out_prncp', 'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv',\n",
      "       'total_rec_prncp', 'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal',\n",
      "       'total_rev_hi_lim', 'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc',\n",
      "       'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats', 'pct_tl_nvr_dlq',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'total_il_high_credit_limit', 'term_ 60 months', 'grade_E',\n",
      "       'emp_length_10+ years', 'home_ownership_MORTGAGE',\n",
      "       'verification_status_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is funded_amnt index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'annual_inc', 'open_acc', 'revol_bal', 'total_acc',\n",
      "       'out_prncp', 'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv',\n",
      "       'total_rec_prncp', 'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal',\n",
      "       'total_rev_hi_lim', 'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc',\n",
      "       'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats', 'pct_tl_nvr_dlq',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'total_il_high_credit_limit', 'term_ 60 months', 'grade_E',\n",
      "       'emp_length_10+ years', 'home_ownership_MORTGAGE',\n",
      "       'verification_status_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is funded_amnt_inv index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'annual_inc', 'open_acc', 'revol_bal', 'total_acc',\n",
      "       'out_prncp', 'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv',\n",
      "       'total_rec_prncp', 'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal',\n",
      "       'total_rev_hi_lim', 'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc',\n",
      "       'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats', 'pct_tl_nvr_dlq',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'total_il_high_credit_limit', 'term_ 60 months', 'grade_E',\n",
      "       'emp_length_10+ years', 'home_ownership_MORTGAGE',\n",
      "       'verification_status_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is int_rate index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'inq_last_6mths', 'out_prncp', 'out_prncp_inv',\n",
      "       'total_rec_int', 'recoveries', 'collection_recovery_fee',\n",
      "       'acc_open_past_24mths', 'num_tl_op_past_12m', 'term_ 60 months',\n",
      "       'grade_C', 'grade_D', 'grade_E', 'grade_F', 'grade_G',\n",
      "       'verification_status_Verified', 'purpose_debt_consolidation',\n",
      "       'title_Debt consolidation', 'initial_list_status_f'],\n",
      "      dtype='object') \n",
      "\n",
      "This is installment index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'annual_inc', 'open_acc', 'revol_bal', 'total_acc',\n",
      "       'out_prncp', 'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv',\n",
      "       'total_rec_prncp', 'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal',\n",
      "       'total_rev_hi_lim', 'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc',\n",
      "       'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'term_ 60 months', 'home_ownership_MORTGAGE',\n",
      "       'verification_status_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is annual_inc index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_bc_sats',\n",
      "       'num_bc_tl', 'num_sats', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is dti index list: Index(['dti', 'open_acc', 'num_sats', 'total_bal_ex_mort',\n",
      "       'total_il_high_credit_limit'],\n",
      "      dtype='object') \n",
      "\n",
      "This is delinq_2yrs index list: Index(['delinq_2yrs', 'total_acc', 'acc_now_delinq',\n",
      "       'chargeoff_within_12_mths', 'num_accts_ever_120_pd', 'num_tl_30dpd',\n",
      "       'num_tl_90g_dpd_24m'],\n",
      "      dtype='object') \n",
      "\n",
      "This is inq_last_6mths index list: Index(['int_rate', 'inq_last_6mths', 'open_acc', 'total_acc',\n",
      "       'acc_open_past_24mths', 'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'num_tl_op_past_12m', 'pub_rec_bankruptcies', 'grade_E'],\n",
      "      dtype='object') \n",
      "\n",
      "This is open_acc index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'dti', 'inq_last_6mths', 'open_acc', 'revol_bal',\n",
      "       'total_acc', 'out_prncp', 'out_prncp_inv', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'acc_open_past_24mths', 'mo_sin_old_rev_tl_op', 'mort_acc',\n",
      "       'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_il_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'num_tl_op_past_12m', 'pct_tl_nvr_dlq', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is pub_rec index list: Index(['pub_rec', 'acc_open_past_24mths', 'num_tl_op_past_12m',\n",
      "       'pub_rec_bankruptcies', 'tax_liens'],\n",
      "      dtype='object') \n",
      "\n",
      "This is revol_bal index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0',\n",
      "       'num_sats', 'pct_tl_nvr_dlq', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_acc index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'delinq_2yrs', 'inq_last_6mths', 'open_acc', 'revol_bal',\n",
      "       'total_acc', 'out_prncp', 'out_prncp_inv', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_prncp', 'total_rec_int', 'tot_cur_bal',\n",
      "       'total_rev_hi_lim', 'acc_open_past_24mths', 'mo_sin_old_rev_tl_op',\n",
      "       'mort_acc', 'num_accts_ever_120_pd', 'num_actv_bc_tl',\n",
      "       'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl', 'num_il_tl',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'num_tl_op_past_12m', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'total_il_high_credit_limit', 'term_ 60 months',\n",
      "       'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is out_prncp index list: Index(['id', 'member_id', 'loan_amnt', 'funded_amnt', 'funded_amnt_inv',\n",
      "       'int_rate', 'installment', 'annual_inc', 'open_acc', 'revol_bal',\n",
      "       'total_acc', 'out_prncp', 'out_prncp_inv', 'total_rec_int',\n",
      "       'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'total_il_high_credit_limit', 'term_ 60 months',\n",
      "       'home_ownership_MORTGAGE', 'initial_list_status_w',\n",
      "       'last_pymnt_d_Jan-2017', 'next_pymnt_d_Feb-2017',\n",
      "       'next_pymnt_d_Jan-2017', 'last_credit_pull_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is out_prncp_inv index list: Index(['id', 'member_id', 'loan_amnt', 'funded_amnt', 'funded_amnt_inv',\n",
      "       'int_rate', 'installment', 'annual_inc', 'open_acc', 'revol_bal',\n",
      "       'total_acc', 'out_prncp', 'out_prncp_inv', 'total_rec_int',\n",
      "       'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'total_il_high_credit_limit', 'term_ 60 months',\n",
      "       'home_ownership_MORTGAGE', 'initial_list_status_w',\n",
      "       'last_pymnt_d_Jan-2017', 'next_pymnt_d_Feb-2017',\n",
      "       'next_pymnt_d_Jan-2017', 'last_credit_pull_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_pymnt index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_prncp', 'total_rec_int',\n",
      "       'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_bc_sats',\n",
      "       'num_bc_tl', 'num_op_rev_tl', 'num_sats', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'term_ 60 months', 'home_ownership_MORTGAGE',\n",
      "       'verification_status_Verified', 'issue_d_Jan-2015',\n",
      "       'last_credit_pull_d_Dec-2016', 'last_credit_pull_d_Jul-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_pymnt_inv index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_prncp', 'total_rec_int',\n",
      "       'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_bc_sats',\n",
      "       'num_bc_tl', 'num_op_rev_tl', 'num_sats', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'term_ 60 months', 'home_ownership_MORTGAGE',\n",
      "       'verification_status_Verified', 'issue_d_Jan-2015',\n",
      "       'last_credit_pull_d_Dec-2016', 'last_credit_pull_d_Jul-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_rec_prncp index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'revol_bal', 'total_acc', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_prncp', 'total_rec_int',\n",
      "       'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_op_rev_tl', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'home_ownership_MORTGAGE', 'last_pymnt_d_Nov-2016',\n",
      "       'last_credit_pull_d_Apr-2016', 'last_credit_pull_d_Aug-2016',\n",
      "       'last_credit_pull_d_Dec-2016', 'last_credit_pull_d_Jul-2016',\n",
      "       'last_credit_pull_d_Jun-2016', 'last_credit_pull_d_Mar-2016',\n",
      "       'last_credit_pull_d_Nov-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_rec_int index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'annual_inc', 'open_acc', 'revol_bal', 'total_acc',\n",
      "       'out_prncp', 'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv',\n",
      "       'total_rec_prncp', 'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'avg_cur_bal', 'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'total_il_high_credit_limit', 'term_ 60 months', 'grade_D', 'grade_E',\n",
      "       'grade_F', 'grade_G', 'home_ownership_MORTGAGE',\n",
      "       'verification_status_Verified', 'purpose_debt_consolidation',\n",
      "       'title_Debt consolidation', 'last_pymnt_d_Jan-2017',\n",
      "       'next_pymnt_d_Feb-2017', 'last_credit_pull_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_rec_late_fee index list: Index(['total_rec_late_fee'], dtype='object') \n",
      "\n",
      "This is recoveries index list: Index(['int_rate', 'recoveries', 'collection_recovery_fee',\n",
      "       'last_credit_pull_d_Oct-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is collection_recovery_fee index list: Index(['int_rate', 'recoveries', 'collection_recovery_fee',\n",
      "       'last_pymnt_d_Jan-2016', 'last_credit_pull_d_Oct-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_amnt index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp', 'last_pymnt_amnt',\n",
      "       'tot_cur_bal', 'avg_cur_bal', 'mort_acc', 'tot_hi_cred_lim',\n",
      "       'total_bc_limit', 'last_pymnt_d_Apr-2016', 'last_pymnt_d_Aug-2015',\n",
      "       'last_pymnt_d_Aug-2016', 'last_pymnt_d_Dec-2015',\n",
      "       'last_pymnt_d_Feb-2016', 'last_pymnt_d_Jan-2016',\n",
      "       'last_pymnt_d_Jul-2016', 'last_pymnt_d_Jun-2016',\n",
      "       'last_pymnt_d_Mar-2016', 'last_pymnt_d_May-2016',\n",
      "       'last_pymnt_d_Nov-2015', 'last_pymnt_d_Nov-2016',\n",
      "       'last_pymnt_d_Oct-2015', 'last_pymnt_d_Oct-2016',\n",
      "       'last_pymnt_d_Sep-2015', 'last_credit_pull_d_Apr-2016',\n",
      "       'last_credit_pull_d_Aug-2016', 'last_credit_pull_d_Dec-2015',\n",
      "       'last_credit_pull_d_Dec-2016', 'last_credit_pull_d_Feb-2016',\n",
      "       'last_credit_pull_d_Jan-2016', 'last_credit_pull_d_Jul-2016',\n",
      "       'last_credit_pull_d_Jun-2016', 'last_credit_pull_d_Mar-2016',\n",
      "       'last_credit_pull_d_May-2016', 'last_credit_pull_d_Nov-2016',\n",
      "       'last_credit_pull_d_Oct-2016', 'last_credit_pull_d_Sep-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is collections_12_mths_ex_med index list: Index(['collections_12_mths_ex_med', 'num_tl_90g_dpd_24m'], dtype='object') \n",
      "\n",
      "This is policy_code index list: Index([], dtype='object') \n",
      "\n",
      "This is acc_now_delinq index list: Index(['delinq_2yrs', 'acc_now_delinq', 'delinq_amnt', 'num_tl_30dpd'], dtype='object') \n",
      "\n",
      "This is tot_coll_amt index list: Index(['tot_coll_amt', 'num_accts_ever_120_pd'], dtype='object') \n",
      "\n",
      "This is tot_cur_bal index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl',\n",
      "       'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl', 'num_il_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'num_sats', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'term_ 60 months', 'emp_length_10+ years', 'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_rev_hi_lim index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0',\n",
      "       'num_sats', 'pct_tl_nvr_dlq', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'total_il_high_credit_limit', 'grade_A',\n",
      "       'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is acc_open_past_24mths index list: Index(['int_rate', 'inq_last_6mths', 'open_acc', 'pub_rec', 'total_acc',\n",
      "       'acc_open_past_24mths', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_bc_tl', 'num_il_tl', 'num_op_rev_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'num_sats', 'num_tl_op_past_12m',\n",
      "       'pub_rec_bankruptcies', 'total_bal_ex_mort',\n",
      "       'total_il_high_credit_limit', 'grade_E',\n",
      "       'verification_status_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is avg_cur_bal index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'revol_bal', 'out_prncp', 'out_prncp_inv', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_prncp', 'total_rec_int',\n",
      "       'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mo_sin_rcnt_rev_tl_op', 'mort_acc',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'total_il_high_credit_limit', 'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is chargeoff_within_12_mths index list: Index(['delinq_2yrs', 'chargeoff_within_12_mths', 'num_accts_ever_120_pd',\n",
      "       'num_tl_90g_dpd_24m'],\n",
      "      dtype='object') \n",
      "\n",
      "This is delinq_amnt index list: Index(['acc_now_delinq', 'delinq_amnt'], dtype='object') \n",
      "\n",
      "This is mo_sin_old_rev_tl_op index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0',\n",
      "       'num_sats', 'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'grade_A', 'emp_length_10+ years', 'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is mo_sin_rcnt_rev_tl_op index list: Index(['avg_cur_bal', 'mo_sin_rcnt_rev_tl_op', 'mo_sin_rcnt_tl'], dtype='object') \n",
      "\n",
      "This is mo_sin_rcnt_tl index list: Index(['mo_sin_rcnt_rev_tl_op', 'mo_sin_rcnt_tl', 'grade_A'], dtype='object') \n",
      "\n",
      "This is mort_acc index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc', 'num_bc_tl',\n",
      "       'num_sats', 'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_bc_limit',\n",
      "       'emp_length_10+ years', 'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_accts_ever_120_pd index list: Index(['delinq_2yrs', 'total_acc', 'tot_coll_amt', 'chargeoff_within_12_mths',\n",
      "       'num_accts_ever_120_pd', 'num_il_tl', 'num_tl_90g_dpd_24m'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_actv_bc_tl index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_int',\n",
      "       'tot_cur_bal', 'total_rev_hi_lim', 'acc_open_past_24mths',\n",
      "       'mo_sin_old_rev_tl_op', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0',\n",
      "       'num_sats', 'num_tl_op_past_12m', 'pct_tl_nvr_dlq', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_actv_rev_tl index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'inq_last_6mths', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'acc_open_past_24mths', 'mo_sin_old_rev_tl_op', 'num_actv_bc_tl',\n",
      "       'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'num_sats', 'num_tl_op_past_12m',\n",
      "       'pct_tl_nvr_dlq', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'emp_length_10+ years'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_bc_sats index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'inq_last_6mths', 'open_acc', 'revol_bal', 'total_acc',\n",
      "       'out_prncp', 'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv',\n",
      "       'total_rec_prncp', 'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'acc_open_past_24mths', 'mo_sin_old_rev_tl_op', 'num_actv_bc_tl',\n",
      "       'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'num_sats', 'num_tl_op_past_12m',\n",
      "       'pct_tl_nvr_dlq', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_bc_tl index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'inq_last_6mths', 'open_acc', 'revol_bal', 'total_acc',\n",
      "       'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp', 'tot_cur_bal',\n",
      "       'total_rev_hi_lim', 'acc_open_past_24mths', 'mo_sin_old_rev_tl_op',\n",
      "       'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats',\n",
      "       'num_bc_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'num_tl_op_past_12m', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'grade_A', 'emp_length_10+ years'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_il_tl index list: Index(['open_acc', 'total_acc', 'tot_cur_bal', 'acc_open_past_24mths',\n",
      "       'num_accts_ever_120_pd', 'num_il_tl', 'num_sats', 'num_tl_op_past_12m',\n",
      "       'tot_hi_cred_lim', 'total_bal_ex_mort', 'total_il_high_credit_limit'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_op_rev_tl index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'inq_last_6mths', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'total_rev_hi_lim', 'acc_open_past_24mths',\n",
      "       'mo_sin_old_rev_tl_op', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0',\n",
      "       'num_sats', 'num_tl_op_past_12m', 'pct_tl_nvr_dlq', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_rev_tl_bal_gt_0 index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'inq_last_6mths', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'acc_open_past_24mths', 'mo_sin_old_rev_tl_op', 'num_actv_bc_tl',\n",
      "       'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'num_sats', 'num_tl_op_past_12m',\n",
      "       'pct_tl_nvr_dlq', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'emp_length_10+ years'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_sats index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'dti', 'inq_last_6mths', 'open_acc', 'revol_bal',\n",
      "       'total_acc', 'out_prncp', 'out_prncp_inv', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'acc_open_past_24mths', 'mo_sin_old_rev_tl_op', 'mort_acc',\n",
      "       'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl',\n",
      "       'num_il_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats',\n",
      "       'num_tl_op_past_12m', 'pct_tl_nvr_dlq', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_tl_30dpd index list: Index(['delinq_2yrs', 'acc_now_delinq', 'num_tl_30dpd'], dtype='object') \n",
      "\n",
      "This is num_tl_90g_dpd_24m index list: Index(['delinq_2yrs', 'collections_12_mths_ex_med', 'chargeoff_within_12_mths',\n",
      "       'num_accts_ever_120_pd', 'num_tl_90g_dpd_24m'],\n",
      "      dtype='object') \n",
      "\n",
      "This is num_tl_op_past_12m index list: Index(['int_rate', 'inq_last_6mths', 'open_acc', 'pub_rec', 'total_acc',\n",
      "       'acc_open_past_24mths', 'num_actv_bc_tl', 'num_actv_rev_tl',\n",
      "       'num_bc_sats', 'num_bc_tl', 'num_il_tl', 'num_op_rev_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'num_sats', 'num_tl_op_past_12m',\n",
      "       'pub_rec_bankruptcies', 'total_bal_ex_mort',\n",
      "       'total_il_high_credit_limit', 'grade_D', 'grade_E',\n",
      "       'verification_status_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is pct_tl_nvr_dlq index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'open_acc', 'revol_bal',\n",
      "       'total_rev_hi_lim', 'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats', 'pct_tl_nvr_dlq',\n",
      "       'total_bc_limit'],\n",
      "      dtype='object') \n",
      "\n",
      "This is pub_rec_bankruptcies index list: Index(['inq_last_6mths', 'pub_rec', 'acc_open_past_24mths',\n",
      "       'num_tl_op_past_12m', 'pub_rec_bankruptcies'],\n",
      "      dtype='object') \n",
      "\n",
      "This is tax_liens index list: Index(['pub_rec', 'tax_liens'], dtype='object') \n",
      "\n",
      "This is tot_hi_cred_lim index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl',\n",
      "       'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl', 'num_il_tl',\n",
      "       'num_op_rev_tl', 'num_rev_tl_bal_gt_0', 'num_sats', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'grade_A', 'emp_length_10+ years', 'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_bal_ex_mort index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'dti', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'acc_open_past_24mths', 'avg_cur_bal', 'mo_sin_old_rev_tl_op',\n",
      "       'mort_acc', 'num_actv_bc_tl', 'num_actv_rev_tl', 'num_bc_sats',\n",
      "       'num_bc_tl', 'num_il_tl', 'num_op_rev_tl', 'num_rev_tl_bal_gt_0',\n",
      "       'num_sats', 'num_tl_op_past_12m', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'term_ 60 months', 'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_bc_limit index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'last_pymnt_amnt', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'avg_cur_bal', 'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_bc_tl',\n",
      "       'num_actv_rev_tl', 'num_bc_sats', 'num_bc_tl', 'num_op_rev_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'num_sats', 'pct_tl_nvr_dlq', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'total_il_high_credit_limit',\n",
      "       'grade_A', 'home_ownership_MORTGAGE', 'purpose_credit_card',\n",
      "       'title_Credit card refinancing'],\n",
      "      dtype='object') \n",
      "\n",
      "This is total_il_high_credit_limit index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'dti', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim',\n",
      "       'acc_open_past_24mths', 'avg_cur_bal', 'num_il_tl', 'num_sats',\n",
      "       'num_tl_op_past_12m', 'tot_hi_cred_lim', 'total_bal_ex_mort',\n",
      "       'total_bc_limit', 'total_il_high_credit_limit'],\n",
      "      dtype='object') \n",
      "\n",
      "This is term_ 36 months index list: Index(['term_ 36 months', 'grade_A', 'grade_B', 'initial_list_status_f'], dtype='object') \n",
      "\n",
      "This is term_ 60 months index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'total_acc', 'out_prncp', 'out_prncp_inv', 'total_pymnt',\n",
      "       'total_pymnt_inv', 'total_rec_int', 'tot_cur_bal', 'total_bal_ex_mort',\n",
      "       'term_ 60 months', 'grade_D', 'grade_E', 'grade_F',\n",
      "       'initial_list_status_w'],\n",
      "      dtype='object') \n",
      "\n",
      "This is grade_A index list: Index(['total_rev_hi_lim', 'mo_sin_old_rev_tl_op', 'mo_sin_rcnt_tl',\n",
      "       'num_bc_tl', 'tot_hi_cred_lim', 'total_bc_limit', 'term_ 36 months',\n",
      "       'grade_A', 'verification_status_Not Verified', 'purpose_credit_card',\n",
      "       'title_Credit card refinancing', 'initial_list_status_w'],\n",
      "      dtype='object') \n",
      "\n",
      "This is grade_B index list: Index(['term_ 36 months', 'grade_B'], dtype='object') \n",
      "\n",
      "This is grade_C index list: Index(['int_rate', 'grade_C'], dtype='object') \n",
      "\n",
      "This is grade_D index list: Index(['int_rate', 'total_rec_int', 'num_tl_op_past_12m', 'term_ 60 months',\n",
      "       'grade_D'],\n",
      "      dtype='object') \n",
      "\n",
      "This is grade_E index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'inq_last_6mths', 'total_rec_int', 'acc_open_past_24mths',\n",
      "       'num_tl_op_past_12m', 'term_ 60 months', 'grade_E'],\n",
      "      dtype='object') \n",
      "\n",
      "This is grade_F index list: Index(['int_rate', 'total_rec_int', 'term_ 60 months', 'grade_F'], dtype='object') \n",
      "\n",
      "This is grade_G index list: Index(['int_rate', 'total_rec_int', 'grade_G'], dtype='object') \n",
      "\n",
      "This is emp_length_1 year index list: Index(['emp_length_1 year'], dtype='object') \n",
      "\n",
      "This is emp_length_10+ years index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'tot_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_actv_rev_tl', 'num_bc_tl',\n",
      "       'num_rev_tl_bal_gt_0', 'tot_hi_cred_lim', 'emp_length_10+ years',\n",
      "       'home_ownership_MORTGAGE'],\n",
      "      dtype='object') \n",
      "\n",
      "This is emp_length_2 years index list: Index(['emp_length_2 years'], dtype='object') \n",
      "\n",
      "This is emp_length_3 years index list: Index(['emp_length_3 years'], dtype='object') \n",
      "\n",
      "This is emp_length_4 years index list: Index(['emp_length_4 years'], dtype='object') \n",
      "\n",
      "This is emp_length_5 years index list: Index(['emp_length_5 years'], dtype='object') \n",
      "\n",
      "This is emp_length_6 years index list: Index(['emp_length_6 years'], dtype='object') \n",
      "\n",
      "This is emp_length_7 years index list: Index(['emp_length_7 years'], dtype='object') \n",
      "\n",
      "This is emp_length_8 years index list: Index(['emp_length_8 years'], dtype='object') \n",
      "\n",
      "This is emp_length_9 years index list: Index(['emp_length_9 years'], dtype='object') \n",
      "\n",
      "This is emp_length_< 1 year index list: Index(['emp_length_< 1 year'], dtype='object') \n",
      "\n",
      "This is home_ownership_ANY index list: Index(['home_ownership_ANY'], dtype='object') \n",
      "\n",
      "This is home_ownership_MORTGAGE index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'installment',\n",
      "       'annual_inc', 'open_acc', 'revol_bal', 'total_acc', 'out_prncp',\n",
      "       'out_prncp_inv', 'total_pymnt', 'total_pymnt_inv', 'total_rec_prncp',\n",
      "       'total_rec_int', 'tot_cur_bal', 'total_rev_hi_lim', 'avg_cur_bal',\n",
      "       'mo_sin_old_rev_tl_op', 'mort_acc', 'num_sats', 'tot_hi_cred_lim',\n",
      "       'total_bal_ex_mort', 'total_bc_limit', 'emp_length_10+ years',\n",
      "       'home_ownership_MORTGAGE', 'purpose_home_improvement',\n",
      "       'title_Home improvement'],\n",
      "      dtype='object') \n",
      "\n",
      "This is home_ownership_OWN index list: Index(['home_ownership_OWN'], dtype='object') \n",
      "\n",
      "This is home_ownership_RENT index list: Index(['home_ownership_RENT'], dtype='object') \n",
      "\n",
      "This is verification_status_Not Verified index list: Index(['grade_A', 'verification_status_Not Verified'], dtype='object') \n",
      "\n",
      "This is verification_status_Source Verified index list: Index(['verification_status_Source Verified'], dtype='object') \n",
      "\n",
      "This is verification_status_Verified index list: Index(['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate',\n",
      "       'installment', 'total_pymnt', 'total_pymnt_inv', 'total_rec_int',\n",
      "       'acc_open_past_24mths', 'num_tl_op_past_12m',\n",
      "       'verification_status_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is issue_d_Apr-2015 index list: Index(['issue_d_Apr-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Aug-2015 index list: Index(['id', 'member_id', 'issue_d_Aug-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Dec-2015 index list: Index(['id', 'member_id', 'issue_d_Dec-2015', 'initial_list_status_w'], dtype='object') \n",
      "\n",
      "This is issue_d_Feb-2015 index list: Index(['issue_d_Feb-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Jan-2015 index list: Index(['total_pymnt', 'total_pymnt_inv', 'issue_d_Jan-2015',\n",
      "       'initial_list_status_f'],\n",
      "      dtype='object') \n",
      "\n",
      "This is issue_d_Jul-2015 index list: Index(['issue_d_Jul-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Jun-2015 index list: Index(['issue_d_Jun-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Mar-2015 index list: Index(['issue_d_Mar-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_May-2015 index list: Index(['issue_d_May-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Nov-2015 index list: Index(['id', 'member_id', 'issue_d_Nov-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Oct-2015 index list: Index(['id', 'member_id', 'issue_d_Oct-2015'], dtype='object') \n",
      "\n",
      "This is issue_d_Sep-2015 index list: Index(['id', 'member_id', 'issue_d_Sep-2015'], dtype='object') \n",
      "\n",
      "This is pymnt_plan_n index list: Index([], dtype='object') \n",
      "\n",
      "This is purpose_car index list: Index(['purpose_car', 'title_Car financing'], dtype='object') \n",
      "\n",
      "This is purpose_credit_card index list: Index(['total_bc_limit', 'grade_A', 'purpose_credit_card',\n",
      "       'title_Credit card refinancing'],\n",
      "      dtype='object') \n",
      "\n",
      "This is purpose_debt_consolidation index list: Index(['int_rate', 'total_rec_int', 'purpose_debt_consolidation',\n",
      "       'title_Debt consolidation'],\n",
      "      dtype='object') \n",
      "\n",
      "This is purpose_educational index list: Index(['purpose_educational', 'title_Learning and training'], dtype='object') \n",
      "\n",
      "This is purpose_home_improvement index list: Index(['home_ownership_MORTGAGE', 'purpose_home_improvement',\n",
      "       'title_Home improvement'],\n",
      "      dtype='object') \n",
      "\n",
      "This is purpose_house index list: Index(['purpose_house', 'title_Home buying'], dtype='object') \n",
      "\n",
      "This is purpose_major_purchase index list: Index(['purpose_major_purchase', 'title_Major purchase'], dtype='object') \n",
      "\n",
      "This is purpose_medical index list: Index(['purpose_medical', 'title_Medical expenses'], dtype='object') \n",
      "\n",
      "This is purpose_moving index list: Index(['purpose_moving', 'title_Moving and relocation'], dtype='object') \n",
      "\n",
      "This is purpose_other index list: Index(['purpose_other', 'title_Other'], dtype='object') \n",
      "\n",
      "This is purpose_renewable_energy index list: Index(['purpose_renewable_energy', 'title_Green loan'], dtype='object') \n",
      "\n",
      "This is purpose_small_business index list: Index(['purpose_small_business', 'title_Business'], dtype='object') \n",
      "\n",
      "This is purpose_vacation index list: Index(['purpose_vacation', 'title_Vacation'], dtype='object') \n",
      "\n",
      "This is purpose_wedding index list: Index(['purpose_wedding'], dtype='object') \n",
      "\n",
      "This is title_Business index list: Index(['purpose_small_business', 'title_Business'], dtype='object') \n",
      "\n",
      "This is title_Car financing index list: Index(['purpose_car', 'title_Car financing'], dtype='object') \n",
      "\n",
      "This is title_Credit Card/Auto Repair index list: Index(['title_Credit Card/Auto Repair', 'last_pymnt_d_Jan-2015'], dtype='object') \n",
      "\n",
      "This is title_Credit card refinancing index list: Index(['total_bc_limit', 'grade_A', 'purpose_credit_card',\n",
      "       'title_Credit card refinancing'],\n",
      "      dtype='object') \n",
      "\n",
      "This is title_Debt consolidation index list: Index(['int_rate', 'total_rec_int', 'purpose_debt_consolidation',\n",
      "       'title_Debt consolidation'],\n",
      "      dtype='object') \n",
      "\n",
      "This is title_DebtC index list: Index(['title_DebtC'], dtype='object') \n",
      "\n",
      "This is title_Green loan index list: Index(['purpose_renewable_energy', 'title_Green loan'], dtype='object') \n",
      "\n",
      "This is title_Home buying index list: Index(['purpose_house', 'title_Home buying'], dtype='object') \n",
      "\n",
      "This is title_Home improvement index list: Index(['home_ownership_MORTGAGE', 'purpose_home_improvement',\n",
      "       'title_Home improvement'],\n",
      "      dtype='object') \n",
      "\n",
      "This is title_Learning and training index list: Index(['purpose_educational', 'title_Learning and training'], dtype='object') \n",
      "\n",
      "This is title_Major purchase index list: Index(['purpose_major_purchase', 'title_Major purchase'], dtype='object') \n",
      "\n",
      "This is title_Medical expenses index list: Index(['purpose_medical', 'title_Medical expenses'], dtype='object') \n",
      "\n",
      "This is title_Moving and relocation index list: Index(['purpose_moving', 'title_Moving and relocation'], dtype='object') \n",
      "\n",
      "This is title_New Baby and New House (CC Consolidate) index list: Index(['title_New Baby and New House (CC Consolidate)'], dtype='object') \n",
      "\n",
      "This is title_Other index list: Index(['purpose_other', 'title_Other'], dtype='object') \n",
      "\n",
      "This is title_Pay off Lowes Card index list: Index(['title_Pay off Lowes Card'], dtype='object') \n",
      "\n",
      "This is title_Paying off higher interest cards & auto index list: Index(['title_Paying off higher interest cards & auto'], dtype='object') \n",
      "\n",
      "This is title_Prescription Drug and Medical Costs index list: Index(['title_Prescription Drug and Medical Costs'], dtype='object') \n",
      "\n",
      "This is title_SAVE index list: Index(['title_SAVE'], dtype='object') \n",
      "\n",
      "This is title_Simple Loan Until Contract Is Completed index list: Index(['title_Simple Loan Until Contract Is Completed'], dtype='object') \n",
      "\n",
      "This is title_Student Loan index list: Index(['title_Student Loan'], dtype='object') \n",
      "\n",
      "This is title_Trying to come back to reality! index list: Index(['title_Trying to come back to reality!'], dtype='object') \n",
      "\n",
      "This is title_Vacation index list: Index(['purpose_vacation', 'title_Vacation'], dtype='object') \n",
      "\n",
      "This is title_considerate index list: Index(['title_considerate'], dtype='object') \n",
      "\n",
      "This is title_new day index list: Index(['title_new day'], dtype='object') \n",
      "\n",
      "This is title_new kitchen for momma! index list: Index(['title_new kitchen for momma!'], dtype='object') \n",
      "\n",
      "This is title_odymeds index list: Index(['title_odymeds'], dtype='object') \n",
      "\n",
      "This is initial_list_status_f index list: Index(['int_rate', 'term_ 36 months', 'issue_d_Jan-2015',\n",
      "       'initial_list_status_f'],\n",
      "      dtype='object') \n",
      "\n",
      "This is initial_list_status_w index list: Index(['id', 'member_id', 'out_prncp', 'out_prncp_inv', 'term_ 60 months',\n",
      "       'grade_A', 'issue_d_Dec-2015', 'initial_list_status_w'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Apr-2015 index list: Index(['last_pymnt_d_Apr-2015', 'last_credit_pull_d_Apr-2015',\n",
      "       'last_credit_pull_d_May-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Apr-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Apr-2016',\n",
      "       'last_credit_pull_d_Apr-2016', 'last_credit_pull_d_May-2016',\n",
      "       'last_credit_pull_d_Nov-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Aug-2015 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Aug-2015',\n",
      "       'last_credit_pull_d_Aug-2015', 'last_credit_pull_d_Sep-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Aug-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Aug-2016',\n",
      "       'last_credit_pull_d_Aug-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Dec-2015 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Dec-2015',\n",
      "       'last_credit_pull_d_Dec-2015', 'last_credit_pull_d_Jan-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Dec-2016 index list: Index(['last_pymnt_d_Dec-2016', 'next_pymnt_d_Jan-2017'], dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Feb-2015 index list: Index(['last_pymnt_d_Feb-2015', 'last_credit_pull_d_Feb-2015',\n",
      "       'last_credit_pull_d_Jan-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Feb-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Feb-2016',\n",
      "       'last_credit_pull_d_Feb-2016', 'last_credit_pull_d_Mar-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Jan-2015 index list: Index(['title_Credit Card/Auto Repair', 'last_pymnt_d_Jan-2015',\n",
      "       'last_credit_pull_d_Dec-2014', 'last_credit_pull_d_Jan-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Jan-2016 index list: Index(['collection_recovery_fee', 'last_pymnt_amnt', 'last_pymnt_d_Jan-2016',\n",
      "       'last_credit_pull_d_Feb-2016', 'last_credit_pull_d_Jan-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Jan-2017 index list: Index(['id', 'member_id', 'out_prncp', 'out_prncp_inv', 'total_rec_int',\n",
      "       'last_pymnt_d_Jan-2017', 'next_pymnt_d_Feb-2017',\n",
      "       'last_credit_pull_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Jul-2015 index list: Index(['last_pymnt_d_Jul-2015', 'last_credit_pull_d_Jul-2015'], dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Jul-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Jul-2016',\n",
      "       'last_credit_pull_d_Aug-2016', 'last_credit_pull_d_Jul-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Jun-2015 index list: Index(['last_pymnt_d_Jun-2015', 'last_credit_pull_d_Jun-2015'], dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Jun-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Jun-2016',\n",
      "       'last_credit_pull_d_Jul-2016', 'last_credit_pull_d_Jun-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Mar-2015 index list: Index(['last_pymnt_d_Mar-2015', 'last_credit_pull_d_Mar-2015'], dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Mar-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Mar-2016',\n",
      "       'last_credit_pull_d_Apr-2016', 'last_credit_pull_d_Mar-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_May-2015 index list: Index(['last_pymnt_d_May-2015', 'last_credit_pull_d_May-2015'], dtype='object') \n",
      "\n",
      "This is last_pymnt_d_May-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_May-2016',\n",
      "       'last_credit_pull_d_Dec-2016', 'last_credit_pull_d_Jun-2016',\n",
      "       'last_credit_pull_d_May-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Nov-2015 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Nov-2015',\n",
      "       'last_credit_pull_d_Dec-2015', 'last_credit_pull_d_Nov-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Nov-2016 index list: Index(['total_rec_prncp', 'last_pymnt_amnt', 'last_pymnt_d_Nov-2016',\n",
      "       'last_credit_pull_d_Dec-2016', 'last_credit_pull_d_Nov-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Oct-2015 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Oct-2015',\n",
      "       'last_credit_pull_d_Nov-2015', 'last_credit_pull_d_Oct-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Oct-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Oct-2016',\n",
      "       'last_credit_pull_d_Nov-2016', 'last_credit_pull_d_Oct-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Sep-2015 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Sep-2015',\n",
      "       'last_credit_pull_d_Oct-2015', 'last_credit_pull_d_Sep-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_pymnt_d_Sep-2016 index list: Index(['last_pymnt_d_Sep-2016', 'last_credit_pull_d_Oct-2016'], dtype='object') \n",
      "\n",
      "This is next_pymnt_d_Feb-2017 index list: Index(['out_prncp', 'out_prncp_inv', 'total_rec_int', 'last_pymnt_d_Jan-2017',\n",
      "       'next_pymnt_d_Feb-2017', 'last_credit_pull_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is next_pymnt_d_Jan-2017 index list: Index(['out_prncp', 'out_prncp_inv', 'last_pymnt_d_Dec-2016',\n",
      "       'next_pymnt_d_Jan-2017', 'last_credit_pull_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is next_pymnt_d_Jul-2016 index list: Index(['next_pymnt_d_Jul-2016'], dtype='object') \n",
      "\n",
      "This is next_pymnt_d_Mar-2017 index list: Index(['next_pymnt_d_Mar-2017'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Apr-2015 index list: Index(['last_pymnt_d_Apr-2015', 'last_credit_pull_d_Apr-2015'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Apr-2016 index list: Index(['total_rec_prncp', 'last_pymnt_amnt', 'last_pymnt_d_Apr-2016',\n",
      "       'last_pymnt_d_Mar-2016', 'last_credit_pull_d_Apr-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Aug-2015 index list: Index(['last_pymnt_d_Aug-2015', 'last_credit_pull_d_Aug-2015'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Aug-2016 index list: Index(['total_rec_prncp', 'last_pymnt_amnt', 'last_pymnt_d_Aug-2016',\n",
      "       'last_pymnt_d_Jul-2016', 'last_credit_pull_d_Aug-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Dec-2014 index list: Index(['last_pymnt_d_Jan-2015', 'last_credit_pull_d_Dec-2014'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Dec-2015 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Dec-2015', 'last_pymnt_d_Nov-2015',\n",
      "       'last_credit_pull_d_Dec-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Dec-2016 index list: Index(['total_pymnt', 'total_pymnt_inv', 'total_rec_prncp', 'last_pymnt_amnt',\n",
      "       'last_pymnt_d_May-2016', 'last_pymnt_d_Nov-2016',\n",
      "       'last_credit_pull_d_Dec-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Feb-2015 index list: Index(['last_pymnt_d_Feb-2015', 'last_credit_pull_d_Feb-2015'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Feb-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Feb-2016', 'last_pymnt_d_Jan-2016',\n",
      "       'last_credit_pull_d_Feb-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Jan-2015 index list: Index(['last_pymnt_d_Feb-2015', 'last_pymnt_d_Jan-2015',\n",
      "       'last_credit_pull_d_Jan-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Jan-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Dec-2015', 'last_pymnt_d_Jan-2016',\n",
      "       'last_credit_pull_d_Jan-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Jan-2017 index list: Index(['out_prncp', 'out_prncp_inv', 'total_rec_int', 'last_pymnt_d_Jan-2017',\n",
      "       'next_pymnt_d_Feb-2017', 'next_pymnt_d_Jan-2017',\n",
      "       'last_credit_pull_d_Jan-2017'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Jul-2015 index list: Index(['last_pymnt_d_Jul-2015', 'last_credit_pull_d_Jul-2015'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Jul-2016 index list: Index(['total_pymnt', 'total_pymnt_inv', 'total_rec_prncp', 'last_pymnt_amnt',\n",
      "       'last_pymnt_d_Jul-2016', 'last_pymnt_d_Jun-2016',\n",
      "       'last_credit_pull_d_Jul-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Jun-2015 index list: Index(['last_pymnt_d_Jun-2015', 'last_credit_pull_d_Jun-2015'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Jun-2016 index list: Index(['total_rec_prncp', 'last_pymnt_amnt', 'last_pymnt_d_Jun-2016',\n",
      "       'last_pymnt_d_May-2016', 'last_credit_pull_d_Jun-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Mar-2015 index list: Index(['last_pymnt_d_Mar-2015', 'last_credit_pull_d_Mar-2015'], dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Mar-2016 index list: Index(['total_rec_prncp', 'last_pymnt_amnt', 'last_pymnt_d_Feb-2016',\n",
      "       'last_pymnt_d_Mar-2016', 'last_credit_pull_d_Mar-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_May-2015 index list: Index(['last_pymnt_d_Apr-2015', 'last_pymnt_d_May-2015',\n",
      "       'last_credit_pull_d_May-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_May-2016 index list: Index(['last_pymnt_amnt', 'last_pymnt_d_Apr-2016', 'last_pymnt_d_May-2016',\n",
      "       'last_credit_pull_d_May-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Nov-2015 index list: Index(['last_pymnt_d_Nov-2015', 'last_pymnt_d_Oct-2015',\n",
      "       'last_credit_pull_d_Nov-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Nov-2016 index list: Index(['total_rec_prncp', 'last_pymnt_amnt', 'last_pymnt_d_Apr-2016',\n",
      "       'last_pymnt_d_Nov-2016', 'last_pymnt_d_Oct-2016',\n",
      "       'last_credit_pull_d_Nov-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Oct-2015 index list: Index(['last_pymnt_d_Oct-2015', 'last_pymnt_d_Sep-2015',\n",
      "       'last_credit_pull_d_Oct-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Oct-2016 index list: Index(['recoveries', 'collection_recovery_fee', 'last_pymnt_amnt',\n",
      "       'last_pymnt_d_Oct-2016', 'last_pymnt_d_Sep-2016',\n",
      "       'last_credit_pull_d_Oct-2016'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Sep-2015 index list: Index(['last_pymnt_d_Aug-2015', 'last_pymnt_d_Sep-2015',\n",
      "       'last_credit_pull_d_Sep-2015'],\n",
      "      dtype='object') \n",
      "\n",
      "This is last_credit_pull_d_Sep-2016 index list: Index(['last_pymnt_amnt', 'last_credit_pull_d_Sep-2016'], dtype='object') \n",
      "\n",
      "This is application_type_INDIVIDUAL index list: Index(['application_type_INDIVIDUAL'], dtype='object') \n",
      "\n",
      "This is application_type_JOINT index list: Index(['application_type_JOINT', 'verification_status_joint_Not Verified',\n",
      "       'verification_status_joint_Source Verified',\n",
      "       'verification_status_joint_Verified'],\n",
      "      dtype='object') \n",
      "\n",
      "This is verification_status_joint_Not Verified index list: Index(['application_type_JOINT', 'verification_status_joint_Not Verified'], dtype='object') \n",
      "\n",
      "This is verification_status_joint_Source Verified index list: Index(['application_type_JOINT', 'verification_status_joint_Source Verified'], dtype='object') \n",
      "\n",
      "This is verification_status_joint_Verified index list: Index(['application_type_JOINT', 'verification_status_joint_Verified'], dtype='object') \n",
      "\n"
     ]
    }
   ],
   "source": [
    "y2015_corr_c = y2015_corr.corr()\n",
    "y2015_corr_c = pd.DataFrame(y2015_corr_c)\n",
    "y2015_corr_c_half = y2015_corr_c[y2015_corr_c > 0.1]\n",
    "\n",
    "for ci in y2015_corr_c_half.columns : \n",
    "    temp_id_ind = y2015_corr_c_half[ci].dropna().index\n",
    "    print('This is {} index list: {}'.format(ci, temp_id_ind), '\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PCA(copy=True, iterated_power='auto', n_components=50, random_state=None,\n",
       "  svd_solver='auto', tol=0.0, whiten=False)"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's do it with PCA\n",
    "\n",
    "from sklearn.decomposition import PCA\n",
    "pca = PCA(n_components = 50)\n",
    "pca.fit(X_std)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.05398192 0.03100909 0.03001028 0.02380848 0.01897281 0.01614691\n",
      " 0.01581166 0.01468926 0.01318696 0.01288661 0.01169424 0.01125005\n",
      " 0.01062047 0.01033019 0.01023537 0.01013258 0.01010396 0.01007611\n",
      " 0.01004987 0.0100035  0.00998126 0.00985074 0.00969493 0.00944301\n",
      " 0.00883898 0.00824659 0.00800657 0.00745733 0.00734238 0.00726756\n",
      " 0.00712336 0.00698019 0.00691608 0.00678924 0.00665934 0.00656373\n",
      " 0.00653561 0.00644583 0.00634137 0.00629071 0.00619924 0.00615578\n",
      " 0.00602095 0.00589521 0.00588704 0.00578945 0.00577917 0.00572498\n",
      " 0.0055945  0.00554783]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.546369269985905"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(pca.explained_variance_ratio_)\n",
    "ratio = pca.explained_variance_ratio_\n",
    "ratio.sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/sklearn/preprocessing/data.py:625: DataConversionWarning: Data with input dtype uint8, float64 were all converted to float64 by StandardScaler.\n",
      "  return self.partial_fit(X, y)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/base.py:462: DataConversionWarning: Data with input dtype uint8, float64 were all converted to float64 by StandardScaler.\n",
      "  return self.fit(X, **fit_params).transform(X)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "X_std = StandardScaler().fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n",
      "/opt/conda/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n",
      "  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([0.98059889, 0.98038517, 0.98135879, 0.98183373, 0.96639753,\n",
       "       0.97307053, 0.93003871, 0.98038424, 0.97993208, 0.98057284])"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn import ensemble\n",
    "from sklearn.model_selection import cross_val_score\n",
    "\n",
    "rfc1 = ensemble.RandomForestClassifier()\n",
    "# X = y2015.drop('loan_status', 1)\n",
    "# Y = y2015['loan_status']\n",
    "# X = pd.get_dummies(X)\n",
    "# X = X.dropna(axis=1)\n",
    "\n",
    "cross_val_score(rfc1, X_std, Y, cv=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = [0.98059889, 0.98038517, 0.98135879, 0.98183373, 0.96639753,\n",
    "       0.97307053, 0.93003871, 0.98038424, 0.97993208, 0.98057284]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "a = np.array([0.98059889, 0.98038517, 0.98135879, 0.98183373, 0.96639753,\n",
    "       0.97307053, 0.93003871, 0.98038424, 0.97993208, 0.98057284])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9734572509999999"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "b = np.array([0.98026644, 0.98067013, 0.98114507, 0.98183373, 0.97459036,\n",
    "       0.97644265, 0.93051367, 0.98055048, 0.98016957, 0.9802641 ])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.97464462"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "toc": {
   "colors": {
    "hover_highlight": "#DAA520",
    "running_highlight": "#FF0000",
    "selected_highlight": "#FFD700"
   },
   "moveMenuLeft": true,
   "nav_menu": {
    "height": "86px",
    "width": "252px"
   },
   "navigate_menu": true,
   "number_sections": true,
   "sideBar": true,
   "threshold": 4,
   "toc_cell": false,
   "toc_section_display": "block",
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
